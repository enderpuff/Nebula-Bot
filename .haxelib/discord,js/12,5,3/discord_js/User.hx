package discord_js;

@:jsRequire("discord.js", "User") extern class User {
	function new(client:Client, data:Dynamic);
	public var avatar : Null<String>;
	public var bot : Bool;
	public final createdAt : js.lib.Date;
	public final createdTimestamp : Float;
	public var discriminator : String;
	public final defaultAvatarURL : String;
	public final dmChannel : Null<DMChannel>;
	public var flags : Null<{
		var bitfield : Float;
		dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
		dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
		dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
		dynamic function freeze():{
			var bitfield : Float;
			dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
			dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
			dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
			dynamic function freeze():{
				var bitfield : Float;
				dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
				dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
				dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
				dynamic function freeze():{
					var bitfield : Float;
					dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
					dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
					dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
					dynamic function freeze():{
						var bitfield : Float;
						dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
						dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
						dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
						dynamic function freeze():{
							var bitfield : Float;
							dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
							dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
							dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
							dynamic function freeze():{
								var bitfield : Float;
								dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
								dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
								dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
								dynamic function freeze():{
									var bitfield : Float;
									dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
									dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
									dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
									dynamic function freeze():{
										var bitfield : Float;
										dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
										dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
										dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
										dynamic function freeze():{
											var bitfield : Float;
											dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
											dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
											dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
											dynamic function freeze():{
												var bitfield : Float;
												dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
												dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
												dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
												dynamic function freeze():{
													var bitfield : Float;
													dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
													dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
													dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
													dynamic function freeze():{
														var bitfield : Float;
														dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
														dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
														dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
														dynamic function freeze():{
															var bitfield : Float;
															dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
															dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
															dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
															dynamic function freeze():{
																var bitfield : Float;
																dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
																dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
																dynamic function freeze():{
																	var bitfield : Float;
																	dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																	dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
																	dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
																	dynamic function freeze():{
																		var bitfield : Float;
																		dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																		dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
																		dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
																		dynamic function freeze():{
																			var bitfield : Float;
																			dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																			dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
																			dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
																			dynamic function freeze():{
																				var bitfield : Float;
																				dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																				dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
																				dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
																				dynamic function freeze():{
																					var bitfield : Float;
																					dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																					dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
																					dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
																					dynamic function freeze():{
																						var bitfield : Float;
																						dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																						dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
																						dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
																						dynamic function freeze():{
																							var bitfield : Float;
																							dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<UserFlagsString>;
																							dynamic function any(bit:BitFieldResolvable<UserFlagsString>):Bool;
																							dynamic function equals(bit:BitFieldResolvable<UserFlagsString>):Bool;
																							dynamic function freeze():{
																								var bitfield : Float;
																								dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																								dynamic function any(bit:BitFieldResolvable<Dynamic>):Bool;
																								dynamic function equals(bit:BitFieldResolvable<Dynamic>):Bool;
																								dynamic function freeze():{
																									var bitfield : Dynamic;
																									dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function any(bit:Dynamic):Dynamic;
																									dynamic function equals(bit:Dynamic):Dynamic;
																									dynamic function freeze():Dynamic;
																									dynamic function has(bit:Dynamic):Dynamic;
																									dynamic function missing(bits:Dynamic, hasParam:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function serialize(hasParam:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function toJSON():Dynamic;
																									dynamic function valueOf():Dynamic;
																								};
																								dynamic function has(bit:BitFieldResolvable<Dynamic>):Bool;
																								dynamic function missing(bits:BitFieldResolvable<Dynamic>, hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																								dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																								dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																									var DISCORD_EMPLOYEE : Dynamic;
																									var PARTNERED_SERVER_OWNER : Dynamic;
																									var DISCORD_PARTNER : Dynamic;
																									var HYPESQUAD_EVENTS : Dynamic;
																									var BUGHUNTER_LEVEL_1 : Dynamic;
																									var HOUSE_BRAVERY : Dynamic;
																									var HOUSE_BRILLIANCE : Dynamic;
																									var HOUSE_BALANCE : Dynamic;
																									var EARLY_SUPPORTER : Dynamic;
																									var TEAM_USER : Dynamic;
																									var SYSTEM : Dynamic;
																									var BUGHUNTER_LEVEL_2 : Dynamic;
																									var VERIFIED_BOT : Dynamic;
																									var EARLY_VERIFIED_DEVELOPER : Dynamic;
																									var VERIFIED_DEVELOPER : Dynamic;
																								};
																								dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																								dynamic function toJSON():Float;
																								dynamic function valueOf():Float;
																							};
																							dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
																							dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																							dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<UserFlagsString>;
																							dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																								var DISCORD_EMPLOYEE : Bool;
																								var PARTNERED_SERVER_OWNER : Bool;
																								var DISCORD_PARTNER : Bool;
																								var HYPESQUAD_EVENTS : Bool;
																								var BUGHUNTER_LEVEL_1 : Bool;
																								var HOUSE_BRAVERY : Bool;
																								var HOUSE_BRILLIANCE : Bool;
																								var HOUSE_BALANCE : Bool;
																								var EARLY_SUPPORTER : Bool;
																								var TEAM_USER : Bool;
																								var SYSTEM : Bool;
																								var BUGHUNTER_LEVEL_2 : Bool;
																								var VERIFIED_BOT : Bool;
																								var EARLY_VERIFIED_DEVELOPER : Bool;
																								var VERIFIED_DEVELOPER : Bool;
																							};
																							dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																							dynamic function toJSON():Float;
																							dynamic function valueOf():Float;
																						};
																						dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
																						dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																						dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																						dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																							var DISCORD_EMPLOYEE : Bool;
																							var PARTNERED_SERVER_OWNER : Bool;
																							var DISCORD_PARTNER : Bool;
																							var HYPESQUAD_EVENTS : Bool;
																							var BUGHUNTER_LEVEL_1 : Bool;
																							var HOUSE_BRAVERY : Bool;
																							var HOUSE_BRILLIANCE : Bool;
																							var HOUSE_BALANCE : Bool;
																							var EARLY_SUPPORTER : Bool;
																							var TEAM_USER : Bool;
																							var SYSTEM : Bool;
																							var BUGHUNTER_LEVEL_2 : Bool;
																							var VERIFIED_BOT : Bool;
																							var EARLY_VERIFIED_DEVELOPER : Bool;
																							var VERIFIED_DEVELOPER : Bool;
																						};
																						dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																						dynamic function toJSON():Float;
																						dynamic function valueOf():Float;
																					};
																					dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
																					dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																					dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																					dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																						var DISCORD_EMPLOYEE : Bool;
																						var PARTNERED_SERVER_OWNER : Bool;
																						var DISCORD_PARTNER : Bool;
																						var HYPESQUAD_EVENTS : Bool;
																						var BUGHUNTER_LEVEL_1 : Bool;
																						var HOUSE_BRAVERY : Bool;
																						var HOUSE_BRILLIANCE : Bool;
																						var HOUSE_BALANCE : Bool;
																						var EARLY_SUPPORTER : Bool;
																						var TEAM_USER : Bool;
																						var SYSTEM : Bool;
																						var BUGHUNTER_LEVEL_2 : Bool;
																						var VERIFIED_BOT : Bool;
																						var EARLY_VERIFIED_DEVELOPER : Bool;
																						var VERIFIED_DEVELOPER : Bool;
																					};
																					dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																					dynamic function toJSON():Float;
																					dynamic function valueOf():Float;
																				};
																				dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
																				dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																				dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																				dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																					var DISCORD_EMPLOYEE : Bool;
																					var PARTNERED_SERVER_OWNER : Bool;
																					var DISCORD_PARTNER : Bool;
																					var HYPESQUAD_EVENTS : Bool;
																					var BUGHUNTER_LEVEL_1 : Bool;
																					var HOUSE_BRAVERY : Bool;
																					var HOUSE_BRILLIANCE : Bool;
																					var HOUSE_BALANCE : Bool;
																					var EARLY_SUPPORTER : Bool;
																					var TEAM_USER : Bool;
																					var SYSTEM : Bool;
																					var BUGHUNTER_LEVEL_2 : Bool;
																					var VERIFIED_BOT : Bool;
																					var EARLY_VERIFIED_DEVELOPER : Bool;
																					var VERIFIED_DEVELOPER : Bool;
																				};
																				dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																				dynamic function toJSON():Float;
																				dynamic function valueOf():Float;
																			};
																			dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
																			dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																			dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																			dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																				var DISCORD_EMPLOYEE : Bool;
																				var PARTNERED_SERVER_OWNER : Bool;
																				var DISCORD_PARTNER : Bool;
																				var HYPESQUAD_EVENTS : Bool;
																				var BUGHUNTER_LEVEL_1 : Bool;
																				var HOUSE_BRAVERY : Bool;
																				var HOUSE_BRILLIANCE : Bool;
																				var HOUSE_BALANCE : Bool;
																				var EARLY_SUPPORTER : Bool;
																				var TEAM_USER : Bool;
																				var SYSTEM : Bool;
																				var BUGHUNTER_LEVEL_2 : Bool;
																				var VERIFIED_BOT : Bool;
																				var EARLY_VERIFIED_DEVELOPER : Bool;
																				var VERIFIED_DEVELOPER : Bool;
																			};
																			dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																			dynamic function toJSON():Float;
																			dynamic function valueOf():Float;
																		};
																		dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
																		dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																		dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																		dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																			var DISCORD_EMPLOYEE : Bool;
																			var PARTNERED_SERVER_OWNER : Bool;
																			var DISCORD_PARTNER : Bool;
																			var HYPESQUAD_EVENTS : Bool;
																			var BUGHUNTER_LEVEL_1 : Bool;
																			var HOUSE_BRAVERY : Bool;
																			var HOUSE_BRILLIANCE : Bool;
																			var HOUSE_BALANCE : Bool;
																			var EARLY_SUPPORTER : Bool;
																			var TEAM_USER : Bool;
																			var SYSTEM : Bool;
																			var BUGHUNTER_LEVEL_2 : Bool;
																			var VERIFIED_BOT : Bool;
																			var EARLY_VERIFIED_DEVELOPER : Bool;
																			var VERIFIED_DEVELOPER : Bool;
																		};
																		dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																		dynamic function toJSON():Float;
																		dynamic function valueOf():Float;
																	};
																	dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
																	dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																	dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																	dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																		var DISCORD_EMPLOYEE : Bool;
																		var PARTNERED_SERVER_OWNER : Bool;
																		var DISCORD_PARTNER : Bool;
																		var HYPESQUAD_EVENTS : Bool;
																		var BUGHUNTER_LEVEL_1 : Bool;
																		var HOUSE_BRAVERY : Bool;
																		var HOUSE_BRILLIANCE : Bool;
																		var HOUSE_BALANCE : Bool;
																		var EARLY_SUPPORTER : Bool;
																		var TEAM_USER : Bool;
																		var SYSTEM : Bool;
																		var BUGHUNTER_LEVEL_2 : Bool;
																		var VERIFIED_BOT : Bool;
																		var EARLY_VERIFIED_DEVELOPER : Bool;
																		var VERIFIED_DEVELOPER : Bool;
																	};
																	dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																	dynamic function toJSON():Float;
																	dynamic function valueOf():Float;
																};
																dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
																dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
																dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																	var DISCORD_EMPLOYEE : Bool;
																	var PARTNERED_SERVER_OWNER : Bool;
																	var DISCORD_PARTNER : Bool;
																	var HYPESQUAD_EVENTS : Bool;
																	var BUGHUNTER_LEVEL_1 : Bool;
																	var HOUSE_BRAVERY : Bool;
																	var HOUSE_BRILLIANCE : Bool;
																	var HOUSE_BALANCE : Bool;
																	var EARLY_SUPPORTER : Bool;
																	var TEAM_USER : Bool;
																	var SYSTEM : Bool;
																	var BUGHUNTER_LEVEL_2 : Bool;
																	var VERIFIED_BOT : Bool;
																	var EARLY_VERIFIED_DEVELOPER : Bool;
																	var VERIFIED_DEVELOPER : Bool;
																};
																dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
																dynamic function toJSON():Float;
																dynamic function valueOf():Float;
															};
															dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
															dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
															dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
															dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																var DISCORD_EMPLOYEE : Bool;
																var PARTNERED_SERVER_OWNER : Bool;
																var DISCORD_PARTNER : Bool;
																var HYPESQUAD_EVENTS : Bool;
																var BUGHUNTER_LEVEL_1 : Bool;
																var HOUSE_BRAVERY : Bool;
																var HOUSE_BRILLIANCE : Bool;
																var HOUSE_BALANCE : Bool;
																var EARLY_SUPPORTER : Bool;
																var TEAM_USER : Bool;
																var SYSTEM : Bool;
																var BUGHUNTER_LEVEL_2 : Bool;
																var VERIFIED_BOT : Bool;
																var EARLY_VERIFIED_DEVELOPER : Bool;
																var VERIFIED_DEVELOPER : Bool;
															};
															dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
															dynamic function toJSON():Float;
															dynamic function valueOf():Float;
														};
														dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
														dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
														dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
														dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
															var DISCORD_EMPLOYEE : Bool;
															var PARTNERED_SERVER_OWNER : Bool;
															var DISCORD_PARTNER : Bool;
															var HYPESQUAD_EVENTS : Bool;
															var BUGHUNTER_LEVEL_1 : Bool;
															var HOUSE_BRAVERY : Bool;
															var HOUSE_BRILLIANCE : Bool;
															var HOUSE_BALANCE : Bool;
															var EARLY_SUPPORTER : Bool;
															var TEAM_USER : Bool;
															var SYSTEM : Bool;
															var BUGHUNTER_LEVEL_2 : Bool;
															var VERIFIED_BOT : Bool;
															var EARLY_VERIFIED_DEVELOPER : Bool;
															var VERIFIED_DEVELOPER : Bool;
														};
														dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
														dynamic function toJSON():Float;
														dynamic function valueOf():Float;
													};
													dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
													dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
													dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
													dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
														var DISCORD_EMPLOYEE : Bool;
														var PARTNERED_SERVER_OWNER : Bool;
														var DISCORD_PARTNER : Bool;
														var HYPESQUAD_EVENTS : Bool;
														var BUGHUNTER_LEVEL_1 : Bool;
														var HOUSE_BRAVERY : Bool;
														var HOUSE_BRILLIANCE : Bool;
														var HOUSE_BALANCE : Bool;
														var EARLY_SUPPORTER : Bool;
														var TEAM_USER : Bool;
														var SYSTEM : Bool;
														var BUGHUNTER_LEVEL_2 : Bool;
														var VERIFIED_BOT : Bool;
														var EARLY_VERIFIED_DEVELOPER : Bool;
														var VERIFIED_DEVELOPER : Bool;
													};
													dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
													dynamic function toJSON():Float;
													dynamic function valueOf():Float;
												};
												dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
												dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
												dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
												dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
													var DISCORD_EMPLOYEE : Bool;
													var PARTNERED_SERVER_OWNER : Bool;
													var DISCORD_PARTNER : Bool;
													var HYPESQUAD_EVENTS : Bool;
													var BUGHUNTER_LEVEL_1 : Bool;
													var HOUSE_BRAVERY : Bool;
													var HOUSE_BRILLIANCE : Bool;
													var HOUSE_BALANCE : Bool;
													var EARLY_SUPPORTER : Bool;
													var TEAM_USER : Bool;
													var SYSTEM : Bool;
													var BUGHUNTER_LEVEL_2 : Bool;
													var VERIFIED_BOT : Bool;
													var EARLY_VERIFIED_DEVELOPER : Bool;
													var VERIFIED_DEVELOPER : Bool;
												};
												dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
												dynamic function toJSON():Float;
												dynamic function valueOf():Float;
											};
											dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
											dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
											dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
											dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
												var DISCORD_EMPLOYEE : Bool;
												var PARTNERED_SERVER_OWNER : Bool;
												var DISCORD_PARTNER : Bool;
												var HYPESQUAD_EVENTS : Bool;
												var BUGHUNTER_LEVEL_1 : Bool;
												var HOUSE_BRAVERY : Bool;
												var HOUSE_BRILLIANCE : Bool;
												var HOUSE_BALANCE : Bool;
												var EARLY_SUPPORTER : Bool;
												var TEAM_USER : Bool;
												var SYSTEM : Bool;
												var BUGHUNTER_LEVEL_2 : Bool;
												var VERIFIED_BOT : Bool;
												var EARLY_VERIFIED_DEVELOPER : Bool;
												var VERIFIED_DEVELOPER : Bool;
											};
											dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
											dynamic function toJSON():Float;
											dynamic function valueOf():Float;
										};
										dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
										dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
										dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
										dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
											var DISCORD_EMPLOYEE : Bool;
											var PARTNERED_SERVER_OWNER : Bool;
											var DISCORD_PARTNER : Bool;
											var HYPESQUAD_EVENTS : Bool;
											var BUGHUNTER_LEVEL_1 : Bool;
											var HOUSE_BRAVERY : Bool;
											var HOUSE_BRILLIANCE : Bool;
											var HOUSE_BALANCE : Bool;
											var EARLY_SUPPORTER : Bool;
											var TEAM_USER : Bool;
											var SYSTEM : Bool;
											var BUGHUNTER_LEVEL_2 : Bool;
											var VERIFIED_BOT : Bool;
											var EARLY_VERIFIED_DEVELOPER : Bool;
											var VERIFIED_DEVELOPER : Bool;
										};
										dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
										dynamic function toJSON():Float;
										dynamic function valueOf():Float;
									};
									dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
									dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
									dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
									dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
										var DISCORD_EMPLOYEE : Bool;
										var PARTNERED_SERVER_OWNER : Bool;
										var DISCORD_PARTNER : Bool;
										var HYPESQUAD_EVENTS : Bool;
										var BUGHUNTER_LEVEL_1 : Bool;
										var HOUSE_BRAVERY : Bool;
										var HOUSE_BRILLIANCE : Bool;
										var HOUSE_BALANCE : Bool;
										var EARLY_SUPPORTER : Bool;
										var TEAM_USER : Bool;
										var SYSTEM : Bool;
										var BUGHUNTER_LEVEL_2 : Bool;
										var VERIFIED_BOT : Bool;
										var EARLY_VERIFIED_DEVELOPER : Bool;
										var VERIFIED_DEVELOPER : Bool;
									};
									dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
									dynamic function toJSON():Float;
									dynamic function valueOf():Float;
								};
								dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
								dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
								dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
								dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
									var DISCORD_EMPLOYEE : Bool;
									var PARTNERED_SERVER_OWNER : Bool;
									var DISCORD_PARTNER : Bool;
									var HYPESQUAD_EVENTS : Bool;
									var BUGHUNTER_LEVEL_1 : Bool;
									var HOUSE_BRAVERY : Bool;
									var HOUSE_BRILLIANCE : Bool;
									var HOUSE_BALANCE : Bool;
									var EARLY_SUPPORTER : Bool;
									var TEAM_USER : Bool;
									var SYSTEM : Bool;
									var BUGHUNTER_LEVEL_2 : Bool;
									var VERIFIED_BOT : Bool;
									var EARLY_VERIFIED_DEVELOPER : Bool;
									var VERIFIED_DEVELOPER : Bool;
								};
								dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
								dynamic function toJSON():Float;
								dynamic function valueOf():Float;
							};
							dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
							dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
							dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
							dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
								var DISCORD_EMPLOYEE : Bool;
								var PARTNERED_SERVER_OWNER : Bool;
								var DISCORD_PARTNER : Bool;
								var HYPESQUAD_EVENTS : Bool;
								var BUGHUNTER_LEVEL_1 : Bool;
								var HOUSE_BRAVERY : Bool;
								var HOUSE_BRILLIANCE : Bool;
								var HOUSE_BALANCE : Bool;
								var EARLY_SUPPORTER : Bool;
								var TEAM_USER : Bool;
								var SYSTEM : Bool;
								var BUGHUNTER_LEVEL_2 : Bool;
								var VERIFIED_BOT : Bool;
								var EARLY_VERIFIED_DEVELOPER : Bool;
								var VERIFIED_DEVELOPER : Bool;
							};
							dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
							dynamic function toJSON():Float;
							dynamic function valueOf():Float;
						};
						dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
						dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
						dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
						dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
							var DISCORD_EMPLOYEE : Bool;
							var PARTNERED_SERVER_OWNER : Bool;
							var DISCORD_PARTNER : Bool;
							var HYPESQUAD_EVENTS : Bool;
							var BUGHUNTER_LEVEL_1 : Bool;
							var HOUSE_BRAVERY : Bool;
							var HOUSE_BRILLIANCE : Bool;
							var HOUSE_BALANCE : Bool;
							var EARLY_SUPPORTER : Bool;
							var TEAM_USER : Bool;
							var SYSTEM : Bool;
							var BUGHUNTER_LEVEL_2 : Bool;
							var VERIFIED_BOT : Bool;
							var EARLY_VERIFIED_DEVELOPER : Bool;
							var VERIFIED_DEVELOPER : Bool;
						};
						dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
						dynamic function toJSON():Float;
						dynamic function valueOf():Float;
					};
					dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
					dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
					dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
					dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
						var DISCORD_EMPLOYEE : Bool;
						var PARTNERED_SERVER_OWNER : Bool;
						var DISCORD_PARTNER : Bool;
						var HYPESQUAD_EVENTS : Bool;
						var BUGHUNTER_LEVEL_1 : Bool;
						var HOUSE_BRAVERY : Bool;
						var HOUSE_BRILLIANCE : Bool;
						var HOUSE_BALANCE : Bool;
						var EARLY_SUPPORTER : Bool;
						var TEAM_USER : Bool;
						var SYSTEM : Bool;
						var BUGHUNTER_LEVEL_2 : Bool;
						var VERIFIED_BOT : Bool;
						var EARLY_VERIFIED_DEVELOPER : Bool;
						var VERIFIED_DEVELOPER : Bool;
					};
					dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
					dynamic function toJSON():Float;
					dynamic function valueOf():Float;
				};
				dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
				dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
				dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
				dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
					var DISCORD_EMPLOYEE : Bool;
					var PARTNERED_SERVER_OWNER : Bool;
					var DISCORD_PARTNER : Bool;
					var HYPESQUAD_EVENTS : Bool;
					var BUGHUNTER_LEVEL_1 : Bool;
					var HOUSE_BRAVERY : Bool;
					var HOUSE_BRILLIANCE : Bool;
					var HOUSE_BALANCE : Bool;
					var EARLY_SUPPORTER : Bool;
					var TEAM_USER : Bool;
					var SYSTEM : Bool;
					var BUGHUNTER_LEVEL_2 : Bool;
					var VERIFIED_BOT : Bool;
					var EARLY_VERIFIED_DEVELOPER : Bool;
					var VERIFIED_DEVELOPER : Bool;
				};
				dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
				dynamic function toJSON():Float;
				dynamic function valueOf():Float;
			};
			dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
			dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
			dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
			dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
				var DISCORD_EMPLOYEE : Bool;
				var PARTNERED_SERVER_OWNER : Bool;
				var DISCORD_PARTNER : Bool;
				var HYPESQUAD_EVENTS : Bool;
				var BUGHUNTER_LEVEL_1 : Bool;
				var HOUSE_BRAVERY : Bool;
				var HOUSE_BRILLIANCE : Bool;
				var HOUSE_BALANCE : Bool;
				var EARLY_SUPPORTER : Bool;
				var TEAM_USER : Bool;
				var SYSTEM : Bool;
				var BUGHUNTER_LEVEL_2 : Bool;
				var VERIFIED_BOT : Bool;
				var EARLY_VERIFIED_DEVELOPER : Bool;
				var VERIFIED_DEVELOPER : Bool;
			};
			dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
			dynamic function toJSON():Float;
			dynamic function valueOf():Float;
		};
		dynamic function has(bit:BitFieldResolvable<UserFlagsString>):Bool;
		dynamic function missing(bits:BitFieldResolvable<UserFlagsString>, hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
		dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<UserFlagsString>>):BitField<UserFlagsString>;
		dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
			var DISCORD_EMPLOYEE : Bool;
			var PARTNERED_SERVER_OWNER : Bool;
			var DISCORD_PARTNER : Bool;
			var HYPESQUAD_EVENTS : Bool;
			var BUGHUNTER_LEVEL_1 : Bool;
			var HOUSE_BRAVERY : Bool;
			var HOUSE_BRILLIANCE : Bool;
			var HOUSE_BALANCE : Bool;
			var EARLY_SUPPORTER : Bool;
			var TEAM_USER : Bool;
			var SYSTEM : Bool;
			var BUGHUNTER_LEVEL_2 : Bool;
			var VERIFIED_BOT : Bool;
			var EARLY_VERIFIED_DEVELOPER : Bool;
			var VERIFIED_DEVELOPER : Bool;
		};
		dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<UserFlagsString>;
		dynamic function toJSON():Float;
		dynamic function valueOf():Float;
	}>;
	public var id : String;
	public var lastMessageID : Null<String>;
	public var locale : Null<String>;
	public final partial : Bool;
	public final presence : Presence;
	public var system : Null<Bool>;
	public final tag : String;
	public var username : String;
	public function avatarURL(?options:ImageURLOptions & { @:optional @:native("dynamic") var dynamic_ : Bool; }):Null<String>;
	public function createDM():js.lib.Promise<DMChannel>;
	public function deleteDM():js.lib.Promise<DMChannel>;
	public function displayAvatarURL(?options:ImageURLOptions & { @:optional @:native("dynamic") var dynamic_ : Bool; }):String;
	public function equals(user:User):Bool;
	public function fetch(?force:Bool):js.lib.Promise<User>;
	public function fetchFlags(?force:Bool):js.lib.Promise<UserFlags>;
	/**
		Returns a string representation of an object.
	**/
	public function toString():String;
	public function typingDurationIn(channel:ChannelResolvable):Float;
	public function typingIn(channel:ChannelResolvable):Bool;
	public function typingSinceIn(channel:ChannelResolvable):js.lib.Date;
	public final client : Client;
	public function toJSON(props:haxe.extern.Rest<{ }>):Dynamic;
	/**
		Returns the primitive value of the specified object.
	**/
	@:overload(function():Dynamic { })
	dynamic function valueOf():String;
	final lastMessage : Null<Message>;
	@:overload(function(options:Dynamic):js.lib.Promise<Array<Message>> { })
	@:overload(function(options:ts.AnyOf2<APIMessage, MessageOptions>):js.lib.Promise<ts.AnyOf2<Message, Array<Message>>> { })
	@:overload(function(content:Dynamic, options:ts.AnyOf4<MessageEmbed, MessageAttachment, Array<ts.AnyOf2<MessageEmbed, MessageAttachment>>, Dynamic>):js.lib.Promise<Message> { })
	@:overload(function(content:Dynamic, options:Dynamic):js.lib.Promise<Array<Message>> { })
	@:overload(function(content:Dynamic, options:MessageOptions):js.lib.Promise<ts.AnyOf2<Message, Array<Message>>> { })
	function send(content:ts.AnyOf10<String, Float, { }, Bool, js.lib.Symbol, MessageEmbed, MessageAttachment, Array<ts.AnyOf2<MessageEmbed, MessageAttachment>>, haxe.ds.ReadOnlyArray<Dynamic>, Dynamic>):js.lib.Promise<Message>;
	static var prototype : User;
}