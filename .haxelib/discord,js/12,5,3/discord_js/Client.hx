package discord_js;

@:jsRequire("discord.js", "Client") extern class Client extends BaseClient {
	function new(?options:ClientOptions);
	private var actions : Dynamic;
	public var application : ClientApplication;
	private function _eval(script:String):Dynamic;
	private function _validateOptions(?options:ClientOptions):Void;
	public var channels : ChannelManager;
	public final emojis : GuildEmojiManager;
	public var guilds : GuildManager;
	public var readyAt : Null<js.lib.Date>;
	public final readyTimestamp : Null<Float>;
	public var shard : Null<ShardClientUtil>;
	public var token : Null<String>;
	public final uptime : Null<Float>;
	public var user : Null<ClientUser>;
	public var users : UserManager;
	public var voice : Null<ClientVoiceManager>;
	public var ws : WebSocketManager;
	public function fetchApplication():js.lib.Promise<ClientApplication>;
	public function fetchGuildPreview(guild:GuildResolvable):js.lib.Promise<GuildPreview>;
	public function fetchInvite(invite:String):js.lib.Promise<Invite>;
	public function fetchGuildTemplate(template:String):js.lib.Promise<GuildTemplate>;
	public function fetchVoiceRegions():js.lib.Promise<Collection<String, VoiceRegion>>;
	public function fetchWebhook(id:String, ?token:String):js.lib.Promise<Webhook>;
	public function generateInvite(?options:ts.AnyOf5<Float, InviteGenerationOptions, String, RecursiveReadonlyArray<ts.AnyOf3<Float, String, { var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>; dynamic function any(bit:BitFieldResolvable<Dynamic>):Bool; dynamic function equals(bit:BitFieldResolvable<Dynamic>):Bool; dynamic function freeze():{ var bitfield : Dynamic; dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic; dynamic function any(bit:Dynamic):Dynamic; dynamic function equals(bit:Dynamic):Dynamic; dynamic function freeze():Dynamic; dynamic function has(bit:Dynamic):Dynamic; dynamic function missing(bits:Dynamic, hasParam:haxe.extern.Rest<Any>):Dynamic; dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):Dynamic; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic; dynamic function toJSON():Dynamic; dynamic function valueOf():Dynamic; }; dynamic function has(bit:BitFieldResolvable<Dynamic>):Bool; dynamic function missing(bits:BitFieldResolvable<Dynamic>, hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>; dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Dynamic; var KICK_MEMBERS : Dynamic; var BAN_MEMBERS : Dynamic; var ADMINISTRATOR : Dynamic; var MANAGE_CHANNELS : Dynamic; var MANAGE_GUILD : Dynamic; var ADD_REACTIONS : Dynamic; var VIEW_AUDIT_LOG : Dynamic; var PRIORITY_SPEAKER : Dynamic; var STREAM : Dynamic; var VIEW_CHANNEL : Dynamic; var SEND_MESSAGES : Dynamic; var SEND_TTS_MESSAGES : Dynamic; var MANAGE_MESSAGES : Dynamic; var EMBED_LINKS : Dynamic; var ATTACH_FILES : Dynamic; var READ_MESSAGE_HISTORY : Dynamic; var MENTION_EVERYONE : Dynamic; var USE_EXTERNAL_EMOJIS : Dynamic; var VIEW_GUILD_INSIGHTS : Dynamic; var CONNECT : Dynamic; var SPEAK : Dynamic; var MUTE_MEMBERS : Dynamic; var DEAFEN_MEMBERS : Dynamic; var MOVE_MEMBERS : Dynamic; var USE_VAD : Dynamic; var CHANGE_NICKNAME : Dynamic; var MANAGE_NICKNAMES : Dynamic; var MANAGE_ROLES : Dynamic; var MANAGE_WEBHOOKS : Dynamic; var MANAGE_EMOJIS : Dynamic; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }>>, { var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>; dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function freeze():{ var bitfield : Float; dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>; dynamic function any(bit:BitFieldResolvable<Dynamic>):Bool; dynamic function equals(bit:BitFieldResolvable<Dynamic>):Bool; dynamic function freeze():{ var bitfield : Dynamic; dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic; dynamic function any(bit:Dynamic):Dynamic; dynamic function equals(bit:Dynamic):Dynamic; dynamic function freeze():Dynamic; dynamic function has(bit:Dynamic):Dynamic; dynamic function missing(bits:Dynamic, hasParam:haxe.extern.Rest<Any>):Dynamic; dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):Dynamic; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic; dynamic function toJSON():Dynamic; dynamic function valueOf():Dynamic; }; dynamic function has(bit:BitFieldResolvable<Dynamic>):Bool; dynamic function missing(bits:BitFieldResolvable<Dynamic>, hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>; dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Dynamic; var KICK_MEMBERS : Dynamic; var BAN_MEMBERS : Dynamic; var ADMINISTRATOR : Dynamic; var MANAGE_CHANNELS : Dynamic; var MANAGE_GUILD : Dynamic; var ADD_REACTIONS : Dynamic; var VIEW_AUDIT_LOG : Dynamic; var PRIORITY_SPEAKER : Dynamic; var STREAM : Dynamic; var VIEW_CHANNEL : Dynamic; var SEND_MESSAGES : Dynamic; var SEND_TTS_MESSAGES : Dynamic; var MANAGE_MESSAGES : Dynamic; var EMBED_LINKS : Dynamic; var ATTACH_FILES : Dynamic; var READ_MESSAGE_HISTORY : Dynamic; var MENTION_EVERYONE : Dynamic; var USE_EXTERNAL_EMOJIS : Dynamic; var VIEW_GUILD_INSIGHTS : Dynamic; var CONNECT : Dynamic; var SPEAK : Dynamic; var MUTE_MEMBERS : Dynamic; var DEAFEN_MEMBERS : Dynamic; var MOVE_MEMBERS : Dynamic; var USE_VAD : Dynamic; var CHANGE_NICKNAME : Dynamic; var MANAGE_NICKNAMES : Dynamic; var MANAGE_ROLES : Dynamic; var MANAGE_WEBHOOKS : Dynamic; var MANAGE_EMOJIS : Dynamic; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }; dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool; dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>; dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{ var CREATE_INSTANT_INVITE : Bool; var KICK_MEMBERS : Bool; var BAN_MEMBERS : Bool; var ADMINISTRATOR : Bool; var MANAGE_CHANNELS : Bool; var MANAGE_GUILD : Bool; var ADD_REACTIONS : Bool; var VIEW_AUDIT_LOG : Bool; var PRIORITY_SPEAKER : Bool; var STREAM : Bool; var VIEW_CHANNEL : Bool; var SEND_MESSAGES : Bool; var SEND_TTS_MESSAGES : Bool; var MANAGE_MESSAGES : Bool; var EMBED_LINKS : Bool; var ATTACH_FILES : Bool; var READ_MESSAGE_HISTORY : Bool; var MENTION_EVERYONE : Bool; var USE_EXTERNAL_EMOJIS : Bool; var VIEW_GUILD_INSIGHTS : Bool; var CONNECT : Bool; var SPEAK : Bool; var MUTE_MEMBERS : Bool; var DEAFEN_MEMBERS : Bool; var MOVE_MEMBERS : Bool; var USE_VAD : Bool; var CHANGE_NICKNAME : Bool; var MANAGE_NICKNAMES : Bool; var MANAGE_ROLES : Bool; var MANAGE_WEBHOOKS : Bool; var MANAGE_EMOJIS : Bool; }; dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>; dynamic function toJSON():Float; dynamic function valueOf():Float; }>):js.lib.Promise<String>;
	public function login(?token:String):js.lib.Promise<String>;
	public function sweepMessages(?lifetime:Float):Float;
	public function toJSON():Dynamic;
	@:overload(function<S>(event:{ /** Returns a string representation of a string.Returns a string representation of an object. **/ dynamic function toString():String; /** Returns the primitive value of the specified object.Returns the primitive value of the specified object. **/ dynamic function valueOf():ts.AnyOf2<String, js.lib.Symbol>; }, listener:(args:haxe.extern.Rest<Dynamic>) -> Void):Client { })
	@:overload(function<S>(event:{ /** Returns a string representation of a string.Returns a string representation of an object. **/ dynamic function toString():String; /** Returns the primitive value of the specified object.Returns the primitive value of the specified object. **/ dynamic function valueOf():ts.AnyOf2<String, js.lib.Symbol>; }, listener:(args:haxe.extern.Rest<Dynamic>) -> Void):Client { })
	@:overload(function<K>(event:K, listener:(args:Dynamic) -> Void):Client{})
	public function on<K>(event:K, listener:(args:Dynamic) -> Void):Client;

	@:overload(function<S>(event:{ /** Returns a string representation of a string.Returns a string representation of an object. **/ dynamic function toString():String; /** Returns the primitive value of the specified object.Returns the primitive value of the specified object. **/ dynamic function valueOf():ts.AnyOf2<String, js.lib.Symbol>; }, listener:(args:haxe.extern.Rest<Dynamic>) -> Void):Client { })
	public function once<K>(event:K, listener:(args:haxe.extern.Rest<Any>) -> Void):Client;
	@:overload(function<S>(event:{ /** Returns a string representation of a string.Returns a string representation of an object. **/ dynamic function toString():String; /** Returns the primitive value of the specified object.Returns the primitive value of the specified object. **/ dynamic function valueOf():ts.AnyOf2<String, js.lib.Symbol>; }, args:haxe.extern.Rest<Dynamic>):Bool { })
	public function emit<K>(event:K, args:haxe.extern.Rest<Any>):Bool;
	@:overload(function<S>(event:{ /** Returns a string representation of a string.Returns a string representation of an object. **/ dynamic function toString():String; /** Returns the primitive value of the specified object.Returns the primitive value of the specified object. **/ dynamic function valueOf():ts.AnyOf2<String, js.lib.Symbol>; }, listener:(args:haxe.extern.Rest<Dynamic>) -> Void):Client { })
	public function off<K>(event:K, listener:(args:haxe.extern.Rest<Any>) -> Void):Client;
	@:overload(function<S>(?event:{ /** Returns a string representation of a string.Returns a string representation of an object. **/ dynamic function toString():String; /** Returns the primitive value of the specified object.Returns the primitive value of the specified object. **/ dynamic function valueOf():ts.AnyOf2<String, js.lib.Symbol>; }):Client { })
	public function removeAllListeners<K>(?event:K):Client;
	static var prototype : Client;
}