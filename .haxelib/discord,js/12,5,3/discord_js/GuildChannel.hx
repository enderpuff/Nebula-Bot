package discord_js;

@:jsRequire("discord.js", "GuildChannel") extern class GuildChannel extends Channel {
	function new(guild:Guild, ?data:Dynamic);
	private function memberPermissions(member:GuildMember):{
		dynamic function any(permission:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Bool;
		dynamic function has(permission:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Bool;
		dynamic function missing(bits:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Array<PermissionString>;
		dynamic function serialize(?checkAdmin:Bool):{
			var CREATE_INSTANT_INVITE : Bool;
			var KICK_MEMBERS : Bool;
			var BAN_MEMBERS : Bool;
			var ADMINISTRATOR : Bool;
			var MANAGE_CHANNELS : Bool;
			var MANAGE_GUILD : Bool;
			var ADD_REACTIONS : Bool;
			var VIEW_AUDIT_LOG : Bool;
			var PRIORITY_SPEAKER : Bool;
			var STREAM : Bool;
			var VIEW_CHANNEL : Bool;
			var SEND_MESSAGES : Bool;
			var SEND_TTS_MESSAGES : Bool;
			var MANAGE_MESSAGES : Bool;
			var EMBED_LINKS : Bool;
			var ATTACH_FILES : Bool;
			var READ_MESSAGE_HISTORY : Bool;
			var MENTION_EVERYONE : Bool;
			var USE_EXTERNAL_EMOJIS : Bool;
			var VIEW_GUILD_INSIGHTS : Bool;
			var CONNECT : Bool;
			var SPEAK : Bool;
			var MUTE_MEMBERS : Bool;
			var DEAFEN_MEMBERS : Bool;
			var MOVE_MEMBERS : Bool;
			var USE_VAD : Bool;
			var CHANGE_NICKNAME : Bool;
			var MANAGE_NICKNAMES : Bool;
			var MANAGE_ROLES : Bool;
			var MANAGE_WEBHOOKS : Bool;
			var MANAGE_EMOJIS : Bool;
		};
		dynamic function toArray(?checkAdmin:Bool):Array<PermissionString>;
		var bitfield : Float;
		dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
		dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
		dynamic function freeze():{
			var bitfield : Float;
			dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
			dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function freeze():{
				var bitfield : Float;
				dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
				dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function freeze():{
					var bitfield : Float;
					dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
					dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function freeze():{
						var bitfield : Float;
						dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
						dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function freeze():{
							var bitfield : Float;
							dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
							dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function freeze():{
								var bitfield : Float;
								dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
								dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function freeze():{
									var bitfield : Float;
									dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
									dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function freeze():{
										var bitfield : Float;
										dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
										dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function freeze():{
											var bitfield : Float;
											dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
											dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function freeze():{
												var bitfield : Float;
												dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
												dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function freeze():{
													var bitfield : Float;
													dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
													dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function freeze():{
														var bitfield : Float;
														dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
														dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function freeze():{
															var bitfield : Float;
															dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
															dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function freeze():{
																var bitfield : Float;
																dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function freeze():{
																	var bitfield : Float;
																	dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																	dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function freeze():{
																		var bitfield : Float;
																		dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																		dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function freeze():{
																			var bitfield : Float;
																			dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																			dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function freeze():{
																				var bitfield : Float;
																				dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																				dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function freeze():{
																					var bitfield : Float;
																					dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																					dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function freeze():{
																						var bitfield : Float;
																						dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																						dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function freeze():{
																							var bitfield : Float;
																							dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																							dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function freeze():{
																								var bitfield : Float;
																								dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>;
																								dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																								dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																								dynamic function freeze():{
																									var bitfield : Float;
																									dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																									dynamic function any(bit:BitFieldResolvable<Dynamic>):Bool;
																									dynamic function equals(bit:BitFieldResolvable<Dynamic>):Bool;
																									dynamic function freeze():{
																										var bitfield : Dynamic;
																										dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function any(bit:Dynamic):Dynamic;
																										dynamic function equals(bit:Dynamic):Dynamic;
																										dynamic function freeze():Dynamic;
																										dynamic function has(bit:Dynamic):Dynamic;
																										dynamic function missing(bits:Dynamic, hasParam:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function serialize(hasParam:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function toJSON():Dynamic;
																										dynamic function valueOf():Dynamic;
																									};
																									dynamic function has(bit:BitFieldResolvable<Dynamic>):Bool;
																									dynamic function missing(bits:BitFieldResolvable<Dynamic>, hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																									dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																									dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																										var CREATE_INSTANT_INVITE : Dynamic;
																										var KICK_MEMBERS : Dynamic;
																										var BAN_MEMBERS : Dynamic;
																										var ADMINISTRATOR : Dynamic;
																										var MANAGE_CHANNELS : Dynamic;
																										var MANAGE_GUILD : Dynamic;
																										var ADD_REACTIONS : Dynamic;
																										var VIEW_AUDIT_LOG : Dynamic;
																										var PRIORITY_SPEAKER : Dynamic;
																										var STREAM : Dynamic;
																										var VIEW_CHANNEL : Dynamic;
																										var SEND_MESSAGES : Dynamic;
																										var SEND_TTS_MESSAGES : Dynamic;
																										var MANAGE_MESSAGES : Dynamic;
																										var EMBED_LINKS : Dynamic;
																										var ATTACH_FILES : Dynamic;
																										var READ_MESSAGE_HISTORY : Dynamic;
																										var MENTION_EVERYONE : Dynamic;
																										var USE_EXTERNAL_EMOJIS : Dynamic;
																										var VIEW_GUILD_INSIGHTS : Dynamic;
																										var CONNECT : Dynamic;
																										var SPEAK : Dynamic;
																										var MUTE_MEMBERS : Dynamic;
																										var DEAFEN_MEMBERS : Dynamic;
																										var MOVE_MEMBERS : Dynamic;
																										var USE_VAD : Dynamic;
																										var CHANGE_NICKNAME : Dynamic;
																										var MANAGE_NICKNAMES : Dynamic;
																										var MANAGE_ROLES : Dynamic;
																										var MANAGE_WEBHOOKS : Dynamic;
																										var MANAGE_EMOJIS : Dynamic;
																									};
																									dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																									dynamic function toJSON():Float;
																									dynamic function valueOf():Float;
																								};
																								dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																								dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																								dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>;
																								dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																									var CREATE_INSTANT_INVITE : Bool;
																									var KICK_MEMBERS : Bool;
																									var BAN_MEMBERS : Bool;
																									var ADMINISTRATOR : Bool;
																									var MANAGE_CHANNELS : Bool;
																									var MANAGE_GUILD : Bool;
																									var ADD_REACTIONS : Bool;
																									var VIEW_AUDIT_LOG : Bool;
																									var PRIORITY_SPEAKER : Bool;
																									var STREAM : Bool;
																									var VIEW_CHANNEL : Bool;
																									var SEND_MESSAGES : Bool;
																									var SEND_TTS_MESSAGES : Bool;
																									var MANAGE_MESSAGES : Bool;
																									var EMBED_LINKS : Bool;
																									var ATTACH_FILES : Bool;
																									var READ_MESSAGE_HISTORY : Bool;
																									var MENTION_EVERYONE : Bool;
																									var USE_EXTERNAL_EMOJIS : Bool;
																									var VIEW_GUILD_INSIGHTS : Bool;
																									var CONNECT : Bool;
																									var SPEAK : Bool;
																									var MUTE_MEMBERS : Bool;
																									var DEAFEN_MEMBERS : Bool;
																									var MOVE_MEMBERS : Bool;
																									var USE_VAD : Bool;
																									var CHANGE_NICKNAME : Bool;
																									var MANAGE_NICKNAMES : Bool;
																									var MANAGE_ROLES : Bool;
																									var MANAGE_WEBHOOKS : Bool;
																									var MANAGE_EMOJIS : Bool;
																								};
																								dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																								dynamic function toJSON():Float;
																								dynamic function valueOf():Float;
																							};
																							dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																							dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																							dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																								var CREATE_INSTANT_INVITE : Bool;
																								var KICK_MEMBERS : Bool;
																								var BAN_MEMBERS : Bool;
																								var ADMINISTRATOR : Bool;
																								var MANAGE_CHANNELS : Bool;
																								var MANAGE_GUILD : Bool;
																								var ADD_REACTIONS : Bool;
																								var VIEW_AUDIT_LOG : Bool;
																								var PRIORITY_SPEAKER : Bool;
																								var STREAM : Bool;
																								var VIEW_CHANNEL : Bool;
																								var SEND_MESSAGES : Bool;
																								var SEND_TTS_MESSAGES : Bool;
																								var MANAGE_MESSAGES : Bool;
																								var EMBED_LINKS : Bool;
																								var ATTACH_FILES : Bool;
																								var READ_MESSAGE_HISTORY : Bool;
																								var MENTION_EVERYONE : Bool;
																								var USE_EXTERNAL_EMOJIS : Bool;
																								var VIEW_GUILD_INSIGHTS : Bool;
																								var CONNECT : Bool;
																								var SPEAK : Bool;
																								var MUTE_MEMBERS : Bool;
																								var DEAFEN_MEMBERS : Bool;
																								var MOVE_MEMBERS : Bool;
																								var USE_VAD : Bool;
																								var CHANGE_NICKNAME : Bool;
																								var MANAGE_NICKNAMES : Bool;
																								var MANAGE_ROLES : Bool;
																								var MANAGE_WEBHOOKS : Bool;
																								var MANAGE_EMOJIS : Bool;
																							};
																							dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																							dynamic function toJSON():Float;
																							dynamic function valueOf():Float;
																						};
																						dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																						dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																						dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																							var CREATE_INSTANT_INVITE : Bool;
																							var KICK_MEMBERS : Bool;
																							var BAN_MEMBERS : Bool;
																							var ADMINISTRATOR : Bool;
																							var MANAGE_CHANNELS : Bool;
																							var MANAGE_GUILD : Bool;
																							var ADD_REACTIONS : Bool;
																							var VIEW_AUDIT_LOG : Bool;
																							var PRIORITY_SPEAKER : Bool;
																							var STREAM : Bool;
																							var VIEW_CHANNEL : Bool;
																							var SEND_MESSAGES : Bool;
																							var SEND_TTS_MESSAGES : Bool;
																							var MANAGE_MESSAGES : Bool;
																							var EMBED_LINKS : Bool;
																							var ATTACH_FILES : Bool;
																							var READ_MESSAGE_HISTORY : Bool;
																							var MENTION_EVERYONE : Bool;
																							var USE_EXTERNAL_EMOJIS : Bool;
																							var VIEW_GUILD_INSIGHTS : Bool;
																							var CONNECT : Bool;
																							var SPEAK : Bool;
																							var MUTE_MEMBERS : Bool;
																							var DEAFEN_MEMBERS : Bool;
																							var MOVE_MEMBERS : Bool;
																							var USE_VAD : Bool;
																							var CHANGE_NICKNAME : Bool;
																							var MANAGE_NICKNAMES : Bool;
																							var MANAGE_ROLES : Bool;
																							var MANAGE_WEBHOOKS : Bool;
																							var MANAGE_EMOJIS : Bool;
																						};
																						dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																						dynamic function toJSON():Float;
																						dynamic function valueOf():Float;
																					};
																					dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																					dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																					dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																						var CREATE_INSTANT_INVITE : Bool;
																						var KICK_MEMBERS : Bool;
																						var BAN_MEMBERS : Bool;
																						var ADMINISTRATOR : Bool;
																						var MANAGE_CHANNELS : Bool;
																						var MANAGE_GUILD : Bool;
																						var ADD_REACTIONS : Bool;
																						var VIEW_AUDIT_LOG : Bool;
																						var PRIORITY_SPEAKER : Bool;
																						var STREAM : Bool;
																						var VIEW_CHANNEL : Bool;
																						var SEND_MESSAGES : Bool;
																						var SEND_TTS_MESSAGES : Bool;
																						var MANAGE_MESSAGES : Bool;
																						var EMBED_LINKS : Bool;
																						var ATTACH_FILES : Bool;
																						var READ_MESSAGE_HISTORY : Bool;
																						var MENTION_EVERYONE : Bool;
																						var USE_EXTERNAL_EMOJIS : Bool;
																						var VIEW_GUILD_INSIGHTS : Bool;
																						var CONNECT : Bool;
																						var SPEAK : Bool;
																						var MUTE_MEMBERS : Bool;
																						var DEAFEN_MEMBERS : Bool;
																						var MOVE_MEMBERS : Bool;
																						var USE_VAD : Bool;
																						var CHANGE_NICKNAME : Bool;
																						var MANAGE_NICKNAMES : Bool;
																						var MANAGE_ROLES : Bool;
																						var MANAGE_WEBHOOKS : Bool;
																						var MANAGE_EMOJIS : Bool;
																					};
																					dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																					dynamic function toJSON():Float;
																					dynamic function valueOf():Float;
																				};
																				dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																				dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																				dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																					var CREATE_INSTANT_INVITE : Bool;
																					var KICK_MEMBERS : Bool;
																					var BAN_MEMBERS : Bool;
																					var ADMINISTRATOR : Bool;
																					var MANAGE_CHANNELS : Bool;
																					var MANAGE_GUILD : Bool;
																					var ADD_REACTIONS : Bool;
																					var VIEW_AUDIT_LOG : Bool;
																					var PRIORITY_SPEAKER : Bool;
																					var STREAM : Bool;
																					var VIEW_CHANNEL : Bool;
																					var SEND_MESSAGES : Bool;
																					var SEND_TTS_MESSAGES : Bool;
																					var MANAGE_MESSAGES : Bool;
																					var EMBED_LINKS : Bool;
																					var ATTACH_FILES : Bool;
																					var READ_MESSAGE_HISTORY : Bool;
																					var MENTION_EVERYONE : Bool;
																					var USE_EXTERNAL_EMOJIS : Bool;
																					var VIEW_GUILD_INSIGHTS : Bool;
																					var CONNECT : Bool;
																					var SPEAK : Bool;
																					var MUTE_MEMBERS : Bool;
																					var DEAFEN_MEMBERS : Bool;
																					var MOVE_MEMBERS : Bool;
																					var USE_VAD : Bool;
																					var CHANGE_NICKNAME : Bool;
																					var MANAGE_NICKNAMES : Bool;
																					var MANAGE_ROLES : Bool;
																					var MANAGE_WEBHOOKS : Bool;
																					var MANAGE_EMOJIS : Bool;
																				};
																				dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																				dynamic function toJSON():Float;
																				dynamic function valueOf():Float;
																			};
																			dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																			dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																			dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																				var CREATE_INSTANT_INVITE : Bool;
																				var KICK_MEMBERS : Bool;
																				var BAN_MEMBERS : Bool;
																				var ADMINISTRATOR : Bool;
																				var MANAGE_CHANNELS : Bool;
																				var MANAGE_GUILD : Bool;
																				var ADD_REACTIONS : Bool;
																				var VIEW_AUDIT_LOG : Bool;
																				var PRIORITY_SPEAKER : Bool;
																				var STREAM : Bool;
																				var VIEW_CHANNEL : Bool;
																				var SEND_MESSAGES : Bool;
																				var SEND_TTS_MESSAGES : Bool;
																				var MANAGE_MESSAGES : Bool;
																				var EMBED_LINKS : Bool;
																				var ATTACH_FILES : Bool;
																				var READ_MESSAGE_HISTORY : Bool;
																				var MENTION_EVERYONE : Bool;
																				var USE_EXTERNAL_EMOJIS : Bool;
																				var VIEW_GUILD_INSIGHTS : Bool;
																				var CONNECT : Bool;
																				var SPEAK : Bool;
																				var MUTE_MEMBERS : Bool;
																				var DEAFEN_MEMBERS : Bool;
																				var MOVE_MEMBERS : Bool;
																				var USE_VAD : Bool;
																				var CHANGE_NICKNAME : Bool;
																				var MANAGE_NICKNAMES : Bool;
																				var MANAGE_ROLES : Bool;
																				var MANAGE_WEBHOOKS : Bool;
																				var MANAGE_EMOJIS : Bool;
																			};
																			dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																			dynamic function toJSON():Float;
																			dynamic function valueOf():Float;
																		};
																		dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																		dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																		dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																			var CREATE_INSTANT_INVITE : Bool;
																			var KICK_MEMBERS : Bool;
																			var BAN_MEMBERS : Bool;
																			var ADMINISTRATOR : Bool;
																			var MANAGE_CHANNELS : Bool;
																			var MANAGE_GUILD : Bool;
																			var ADD_REACTIONS : Bool;
																			var VIEW_AUDIT_LOG : Bool;
																			var PRIORITY_SPEAKER : Bool;
																			var STREAM : Bool;
																			var VIEW_CHANNEL : Bool;
																			var SEND_MESSAGES : Bool;
																			var SEND_TTS_MESSAGES : Bool;
																			var MANAGE_MESSAGES : Bool;
																			var EMBED_LINKS : Bool;
																			var ATTACH_FILES : Bool;
																			var READ_MESSAGE_HISTORY : Bool;
																			var MENTION_EVERYONE : Bool;
																			var USE_EXTERNAL_EMOJIS : Bool;
																			var VIEW_GUILD_INSIGHTS : Bool;
																			var CONNECT : Bool;
																			var SPEAK : Bool;
																			var MUTE_MEMBERS : Bool;
																			var DEAFEN_MEMBERS : Bool;
																			var MOVE_MEMBERS : Bool;
																			var USE_VAD : Bool;
																			var CHANGE_NICKNAME : Bool;
																			var MANAGE_NICKNAMES : Bool;
																			var MANAGE_ROLES : Bool;
																			var MANAGE_WEBHOOKS : Bool;
																			var MANAGE_EMOJIS : Bool;
																		};
																		dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																		dynamic function toJSON():Float;
																		dynamic function valueOf():Float;
																	};
																	dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																	dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																	dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																		var CREATE_INSTANT_INVITE : Bool;
																		var KICK_MEMBERS : Bool;
																		var BAN_MEMBERS : Bool;
																		var ADMINISTRATOR : Bool;
																		var MANAGE_CHANNELS : Bool;
																		var MANAGE_GUILD : Bool;
																		var ADD_REACTIONS : Bool;
																		var VIEW_AUDIT_LOG : Bool;
																		var PRIORITY_SPEAKER : Bool;
																		var STREAM : Bool;
																		var VIEW_CHANNEL : Bool;
																		var SEND_MESSAGES : Bool;
																		var SEND_TTS_MESSAGES : Bool;
																		var MANAGE_MESSAGES : Bool;
																		var EMBED_LINKS : Bool;
																		var ATTACH_FILES : Bool;
																		var READ_MESSAGE_HISTORY : Bool;
																		var MENTION_EVERYONE : Bool;
																		var USE_EXTERNAL_EMOJIS : Bool;
																		var VIEW_GUILD_INSIGHTS : Bool;
																		var CONNECT : Bool;
																		var SPEAK : Bool;
																		var MUTE_MEMBERS : Bool;
																		var DEAFEN_MEMBERS : Bool;
																		var MOVE_MEMBERS : Bool;
																		var USE_VAD : Bool;
																		var CHANGE_NICKNAME : Bool;
																		var MANAGE_NICKNAMES : Bool;
																		var MANAGE_ROLES : Bool;
																		var MANAGE_WEBHOOKS : Bool;
																		var MANAGE_EMOJIS : Bool;
																	};
																	dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																	dynamic function toJSON():Float;
																	dynamic function valueOf():Float;
																};
																dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																	var CREATE_INSTANT_INVITE : Bool;
																	var KICK_MEMBERS : Bool;
																	var BAN_MEMBERS : Bool;
																	var ADMINISTRATOR : Bool;
																	var MANAGE_CHANNELS : Bool;
																	var MANAGE_GUILD : Bool;
																	var ADD_REACTIONS : Bool;
																	var VIEW_AUDIT_LOG : Bool;
																	var PRIORITY_SPEAKER : Bool;
																	var STREAM : Bool;
																	var VIEW_CHANNEL : Bool;
																	var SEND_MESSAGES : Bool;
																	var SEND_TTS_MESSAGES : Bool;
																	var MANAGE_MESSAGES : Bool;
																	var EMBED_LINKS : Bool;
																	var ATTACH_FILES : Bool;
																	var READ_MESSAGE_HISTORY : Bool;
																	var MENTION_EVERYONE : Bool;
																	var USE_EXTERNAL_EMOJIS : Bool;
																	var VIEW_GUILD_INSIGHTS : Bool;
																	var CONNECT : Bool;
																	var SPEAK : Bool;
																	var MUTE_MEMBERS : Bool;
																	var DEAFEN_MEMBERS : Bool;
																	var MOVE_MEMBERS : Bool;
																	var USE_VAD : Bool;
																	var CHANGE_NICKNAME : Bool;
																	var MANAGE_NICKNAMES : Bool;
																	var MANAGE_ROLES : Bool;
																	var MANAGE_WEBHOOKS : Bool;
																	var MANAGE_EMOJIS : Bool;
																};
																dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																dynamic function toJSON():Float;
																dynamic function valueOf():Float;
															};
															dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
															dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
															dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																var CREATE_INSTANT_INVITE : Bool;
																var KICK_MEMBERS : Bool;
																var BAN_MEMBERS : Bool;
																var ADMINISTRATOR : Bool;
																var MANAGE_CHANNELS : Bool;
																var MANAGE_GUILD : Bool;
																var ADD_REACTIONS : Bool;
																var VIEW_AUDIT_LOG : Bool;
																var PRIORITY_SPEAKER : Bool;
																var STREAM : Bool;
																var VIEW_CHANNEL : Bool;
																var SEND_MESSAGES : Bool;
																var SEND_TTS_MESSAGES : Bool;
																var MANAGE_MESSAGES : Bool;
																var EMBED_LINKS : Bool;
																var ATTACH_FILES : Bool;
																var READ_MESSAGE_HISTORY : Bool;
																var MENTION_EVERYONE : Bool;
																var USE_EXTERNAL_EMOJIS : Bool;
																var VIEW_GUILD_INSIGHTS : Bool;
																var CONNECT : Bool;
																var SPEAK : Bool;
																var MUTE_MEMBERS : Bool;
																var DEAFEN_MEMBERS : Bool;
																var MOVE_MEMBERS : Bool;
																var USE_VAD : Bool;
																var CHANGE_NICKNAME : Bool;
																var MANAGE_NICKNAMES : Bool;
																var MANAGE_ROLES : Bool;
																var MANAGE_WEBHOOKS : Bool;
																var MANAGE_EMOJIS : Bool;
															};
															dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
															dynamic function toJSON():Float;
															dynamic function valueOf():Float;
														};
														dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
														dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
														dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
															var CREATE_INSTANT_INVITE : Bool;
															var KICK_MEMBERS : Bool;
															var BAN_MEMBERS : Bool;
															var ADMINISTRATOR : Bool;
															var MANAGE_CHANNELS : Bool;
															var MANAGE_GUILD : Bool;
															var ADD_REACTIONS : Bool;
															var VIEW_AUDIT_LOG : Bool;
															var PRIORITY_SPEAKER : Bool;
															var STREAM : Bool;
															var VIEW_CHANNEL : Bool;
															var SEND_MESSAGES : Bool;
															var SEND_TTS_MESSAGES : Bool;
															var MANAGE_MESSAGES : Bool;
															var EMBED_LINKS : Bool;
															var ATTACH_FILES : Bool;
															var READ_MESSAGE_HISTORY : Bool;
															var MENTION_EVERYONE : Bool;
															var USE_EXTERNAL_EMOJIS : Bool;
															var VIEW_GUILD_INSIGHTS : Bool;
															var CONNECT : Bool;
															var SPEAK : Bool;
															var MUTE_MEMBERS : Bool;
															var DEAFEN_MEMBERS : Bool;
															var MOVE_MEMBERS : Bool;
															var USE_VAD : Bool;
															var CHANGE_NICKNAME : Bool;
															var MANAGE_NICKNAMES : Bool;
															var MANAGE_ROLES : Bool;
															var MANAGE_WEBHOOKS : Bool;
															var MANAGE_EMOJIS : Bool;
														};
														dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
														dynamic function toJSON():Float;
														dynamic function valueOf():Float;
													};
													dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
													dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
													dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
														var CREATE_INSTANT_INVITE : Bool;
														var KICK_MEMBERS : Bool;
														var BAN_MEMBERS : Bool;
														var ADMINISTRATOR : Bool;
														var MANAGE_CHANNELS : Bool;
														var MANAGE_GUILD : Bool;
														var ADD_REACTIONS : Bool;
														var VIEW_AUDIT_LOG : Bool;
														var PRIORITY_SPEAKER : Bool;
														var STREAM : Bool;
														var VIEW_CHANNEL : Bool;
														var SEND_MESSAGES : Bool;
														var SEND_TTS_MESSAGES : Bool;
														var MANAGE_MESSAGES : Bool;
														var EMBED_LINKS : Bool;
														var ATTACH_FILES : Bool;
														var READ_MESSAGE_HISTORY : Bool;
														var MENTION_EVERYONE : Bool;
														var USE_EXTERNAL_EMOJIS : Bool;
														var VIEW_GUILD_INSIGHTS : Bool;
														var CONNECT : Bool;
														var SPEAK : Bool;
														var MUTE_MEMBERS : Bool;
														var DEAFEN_MEMBERS : Bool;
														var MOVE_MEMBERS : Bool;
														var USE_VAD : Bool;
														var CHANGE_NICKNAME : Bool;
														var MANAGE_NICKNAMES : Bool;
														var MANAGE_ROLES : Bool;
														var MANAGE_WEBHOOKS : Bool;
														var MANAGE_EMOJIS : Bool;
													};
													dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
													dynamic function toJSON():Float;
													dynamic function valueOf():Float;
												};
												dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
												dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
												dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
													var CREATE_INSTANT_INVITE : Bool;
													var KICK_MEMBERS : Bool;
													var BAN_MEMBERS : Bool;
													var ADMINISTRATOR : Bool;
													var MANAGE_CHANNELS : Bool;
													var MANAGE_GUILD : Bool;
													var ADD_REACTIONS : Bool;
													var VIEW_AUDIT_LOG : Bool;
													var PRIORITY_SPEAKER : Bool;
													var STREAM : Bool;
													var VIEW_CHANNEL : Bool;
													var SEND_MESSAGES : Bool;
													var SEND_TTS_MESSAGES : Bool;
													var MANAGE_MESSAGES : Bool;
													var EMBED_LINKS : Bool;
													var ATTACH_FILES : Bool;
													var READ_MESSAGE_HISTORY : Bool;
													var MENTION_EVERYONE : Bool;
													var USE_EXTERNAL_EMOJIS : Bool;
													var VIEW_GUILD_INSIGHTS : Bool;
													var CONNECT : Bool;
													var SPEAK : Bool;
													var MUTE_MEMBERS : Bool;
													var DEAFEN_MEMBERS : Bool;
													var MOVE_MEMBERS : Bool;
													var USE_VAD : Bool;
													var CHANGE_NICKNAME : Bool;
													var MANAGE_NICKNAMES : Bool;
													var MANAGE_ROLES : Bool;
													var MANAGE_WEBHOOKS : Bool;
													var MANAGE_EMOJIS : Bool;
												};
												dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
												dynamic function toJSON():Float;
												dynamic function valueOf():Float;
											};
											dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
											dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
											dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
												var CREATE_INSTANT_INVITE : Bool;
												var KICK_MEMBERS : Bool;
												var BAN_MEMBERS : Bool;
												var ADMINISTRATOR : Bool;
												var MANAGE_CHANNELS : Bool;
												var MANAGE_GUILD : Bool;
												var ADD_REACTIONS : Bool;
												var VIEW_AUDIT_LOG : Bool;
												var PRIORITY_SPEAKER : Bool;
												var STREAM : Bool;
												var VIEW_CHANNEL : Bool;
												var SEND_MESSAGES : Bool;
												var SEND_TTS_MESSAGES : Bool;
												var MANAGE_MESSAGES : Bool;
												var EMBED_LINKS : Bool;
												var ATTACH_FILES : Bool;
												var READ_MESSAGE_HISTORY : Bool;
												var MENTION_EVERYONE : Bool;
												var USE_EXTERNAL_EMOJIS : Bool;
												var VIEW_GUILD_INSIGHTS : Bool;
												var CONNECT : Bool;
												var SPEAK : Bool;
												var MUTE_MEMBERS : Bool;
												var DEAFEN_MEMBERS : Bool;
												var MOVE_MEMBERS : Bool;
												var USE_VAD : Bool;
												var CHANGE_NICKNAME : Bool;
												var MANAGE_NICKNAMES : Bool;
												var MANAGE_ROLES : Bool;
												var MANAGE_WEBHOOKS : Bool;
												var MANAGE_EMOJIS : Bool;
											};
											dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
											dynamic function toJSON():Float;
											dynamic function valueOf():Float;
										};
										dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
										dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
										dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
											var CREATE_INSTANT_INVITE : Bool;
											var KICK_MEMBERS : Bool;
											var BAN_MEMBERS : Bool;
											var ADMINISTRATOR : Bool;
											var MANAGE_CHANNELS : Bool;
											var MANAGE_GUILD : Bool;
											var ADD_REACTIONS : Bool;
											var VIEW_AUDIT_LOG : Bool;
											var PRIORITY_SPEAKER : Bool;
											var STREAM : Bool;
											var VIEW_CHANNEL : Bool;
											var SEND_MESSAGES : Bool;
											var SEND_TTS_MESSAGES : Bool;
											var MANAGE_MESSAGES : Bool;
											var EMBED_LINKS : Bool;
											var ATTACH_FILES : Bool;
											var READ_MESSAGE_HISTORY : Bool;
											var MENTION_EVERYONE : Bool;
											var USE_EXTERNAL_EMOJIS : Bool;
											var VIEW_GUILD_INSIGHTS : Bool;
											var CONNECT : Bool;
											var SPEAK : Bool;
											var MUTE_MEMBERS : Bool;
											var DEAFEN_MEMBERS : Bool;
											var MOVE_MEMBERS : Bool;
											var USE_VAD : Bool;
											var CHANGE_NICKNAME : Bool;
											var MANAGE_NICKNAMES : Bool;
											var MANAGE_ROLES : Bool;
											var MANAGE_WEBHOOKS : Bool;
											var MANAGE_EMOJIS : Bool;
										};
										dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
										dynamic function toJSON():Float;
										dynamic function valueOf():Float;
									};
									dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
									dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
									dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
										var CREATE_INSTANT_INVITE : Bool;
										var KICK_MEMBERS : Bool;
										var BAN_MEMBERS : Bool;
										var ADMINISTRATOR : Bool;
										var MANAGE_CHANNELS : Bool;
										var MANAGE_GUILD : Bool;
										var ADD_REACTIONS : Bool;
										var VIEW_AUDIT_LOG : Bool;
										var PRIORITY_SPEAKER : Bool;
										var STREAM : Bool;
										var VIEW_CHANNEL : Bool;
										var SEND_MESSAGES : Bool;
										var SEND_TTS_MESSAGES : Bool;
										var MANAGE_MESSAGES : Bool;
										var EMBED_LINKS : Bool;
										var ATTACH_FILES : Bool;
										var READ_MESSAGE_HISTORY : Bool;
										var MENTION_EVERYONE : Bool;
										var USE_EXTERNAL_EMOJIS : Bool;
										var VIEW_GUILD_INSIGHTS : Bool;
										var CONNECT : Bool;
										var SPEAK : Bool;
										var MUTE_MEMBERS : Bool;
										var DEAFEN_MEMBERS : Bool;
										var MOVE_MEMBERS : Bool;
										var USE_VAD : Bool;
										var CHANGE_NICKNAME : Bool;
										var MANAGE_NICKNAMES : Bool;
										var MANAGE_ROLES : Bool;
										var MANAGE_WEBHOOKS : Bool;
										var MANAGE_EMOJIS : Bool;
									};
									dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
									dynamic function toJSON():Float;
									dynamic function valueOf():Float;
								};
								dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
								dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
								dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
									var CREATE_INSTANT_INVITE : Bool;
									var KICK_MEMBERS : Bool;
									var BAN_MEMBERS : Bool;
									var ADMINISTRATOR : Bool;
									var MANAGE_CHANNELS : Bool;
									var MANAGE_GUILD : Bool;
									var ADD_REACTIONS : Bool;
									var VIEW_AUDIT_LOG : Bool;
									var PRIORITY_SPEAKER : Bool;
									var STREAM : Bool;
									var VIEW_CHANNEL : Bool;
									var SEND_MESSAGES : Bool;
									var SEND_TTS_MESSAGES : Bool;
									var MANAGE_MESSAGES : Bool;
									var EMBED_LINKS : Bool;
									var ATTACH_FILES : Bool;
									var READ_MESSAGE_HISTORY : Bool;
									var MENTION_EVERYONE : Bool;
									var USE_EXTERNAL_EMOJIS : Bool;
									var VIEW_GUILD_INSIGHTS : Bool;
									var CONNECT : Bool;
									var SPEAK : Bool;
									var MUTE_MEMBERS : Bool;
									var DEAFEN_MEMBERS : Bool;
									var MOVE_MEMBERS : Bool;
									var USE_VAD : Bool;
									var CHANGE_NICKNAME : Bool;
									var MANAGE_NICKNAMES : Bool;
									var MANAGE_ROLES : Bool;
									var MANAGE_WEBHOOKS : Bool;
									var MANAGE_EMOJIS : Bool;
								};
								dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
								dynamic function toJSON():Float;
								dynamic function valueOf():Float;
							};
							dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
							dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
							dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
								var CREATE_INSTANT_INVITE : Bool;
								var KICK_MEMBERS : Bool;
								var BAN_MEMBERS : Bool;
								var ADMINISTRATOR : Bool;
								var MANAGE_CHANNELS : Bool;
								var MANAGE_GUILD : Bool;
								var ADD_REACTIONS : Bool;
								var VIEW_AUDIT_LOG : Bool;
								var PRIORITY_SPEAKER : Bool;
								var STREAM : Bool;
								var VIEW_CHANNEL : Bool;
								var SEND_MESSAGES : Bool;
								var SEND_TTS_MESSAGES : Bool;
								var MANAGE_MESSAGES : Bool;
								var EMBED_LINKS : Bool;
								var ATTACH_FILES : Bool;
								var READ_MESSAGE_HISTORY : Bool;
								var MENTION_EVERYONE : Bool;
								var USE_EXTERNAL_EMOJIS : Bool;
								var VIEW_GUILD_INSIGHTS : Bool;
								var CONNECT : Bool;
								var SPEAK : Bool;
								var MUTE_MEMBERS : Bool;
								var DEAFEN_MEMBERS : Bool;
								var MOVE_MEMBERS : Bool;
								var USE_VAD : Bool;
								var CHANGE_NICKNAME : Bool;
								var MANAGE_NICKNAMES : Bool;
								var MANAGE_ROLES : Bool;
								var MANAGE_WEBHOOKS : Bool;
								var MANAGE_EMOJIS : Bool;
							};
							dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
							dynamic function toJSON():Float;
							dynamic function valueOf():Float;
						};
						dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
						dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
						dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
							var CREATE_INSTANT_INVITE : Bool;
							var KICK_MEMBERS : Bool;
							var BAN_MEMBERS : Bool;
							var ADMINISTRATOR : Bool;
							var MANAGE_CHANNELS : Bool;
							var MANAGE_GUILD : Bool;
							var ADD_REACTIONS : Bool;
							var VIEW_AUDIT_LOG : Bool;
							var PRIORITY_SPEAKER : Bool;
							var STREAM : Bool;
							var VIEW_CHANNEL : Bool;
							var SEND_MESSAGES : Bool;
							var SEND_TTS_MESSAGES : Bool;
							var MANAGE_MESSAGES : Bool;
							var EMBED_LINKS : Bool;
							var ATTACH_FILES : Bool;
							var READ_MESSAGE_HISTORY : Bool;
							var MENTION_EVERYONE : Bool;
							var USE_EXTERNAL_EMOJIS : Bool;
							var VIEW_GUILD_INSIGHTS : Bool;
							var CONNECT : Bool;
							var SPEAK : Bool;
							var MUTE_MEMBERS : Bool;
							var DEAFEN_MEMBERS : Bool;
							var MOVE_MEMBERS : Bool;
							var USE_VAD : Bool;
							var CHANGE_NICKNAME : Bool;
							var MANAGE_NICKNAMES : Bool;
							var MANAGE_ROLES : Bool;
							var MANAGE_WEBHOOKS : Bool;
							var MANAGE_EMOJIS : Bool;
						};
						dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
						dynamic function toJSON():Float;
						dynamic function valueOf():Float;
					};
					dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
					dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
					dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
						var CREATE_INSTANT_INVITE : Bool;
						var KICK_MEMBERS : Bool;
						var BAN_MEMBERS : Bool;
						var ADMINISTRATOR : Bool;
						var MANAGE_CHANNELS : Bool;
						var MANAGE_GUILD : Bool;
						var ADD_REACTIONS : Bool;
						var VIEW_AUDIT_LOG : Bool;
						var PRIORITY_SPEAKER : Bool;
						var STREAM : Bool;
						var VIEW_CHANNEL : Bool;
						var SEND_MESSAGES : Bool;
						var SEND_TTS_MESSAGES : Bool;
						var MANAGE_MESSAGES : Bool;
						var EMBED_LINKS : Bool;
						var ATTACH_FILES : Bool;
						var READ_MESSAGE_HISTORY : Bool;
						var MENTION_EVERYONE : Bool;
						var USE_EXTERNAL_EMOJIS : Bool;
						var VIEW_GUILD_INSIGHTS : Bool;
						var CONNECT : Bool;
						var SPEAK : Bool;
						var MUTE_MEMBERS : Bool;
						var DEAFEN_MEMBERS : Bool;
						var MOVE_MEMBERS : Bool;
						var USE_VAD : Bool;
						var CHANGE_NICKNAME : Bool;
						var MANAGE_NICKNAMES : Bool;
						var MANAGE_ROLES : Bool;
						var MANAGE_WEBHOOKS : Bool;
						var MANAGE_EMOJIS : Bool;
					};
					dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
					dynamic function toJSON():Float;
					dynamic function valueOf():Float;
				};
				dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
				dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
				dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
					var CREATE_INSTANT_INVITE : Bool;
					var KICK_MEMBERS : Bool;
					var BAN_MEMBERS : Bool;
					var ADMINISTRATOR : Bool;
					var MANAGE_CHANNELS : Bool;
					var MANAGE_GUILD : Bool;
					var ADD_REACTIONS : Bool;
					var VIEW_AUDIT_LOG : Bool;
					var PRIORITY_SPEAKER : Bool;
					var STREAM : Bool;
					var VIEW_CHANNEL : Bool;
					var SEND_MESSAGES : Bool;
					var SEND_TTS_MESSAGES : Bool;
					var MANAGE_MESSAGES : Bool;
					var EMBED_LINKS : Bool;
					var ATTACH_FILES : Bool;
					var READ_MESSAGE_HISTORY : Bool;
					var MENTION_EVERYONE : Bool;
					var USE_EXTERNAL_EMOJIS : Bool;
					var VIEW_GUILD_INSIGHTS : Bool;
					var CONNECT : Bool;
					var SPEAK : Bool;
					var MUTE_MEMBERS : Bool;
					var DEAFEN_MEMBERS : Bool;
					var MOVE_MEMBERS : Bool;
					var USE_VAD : Bool;
					var CHANGE_NICKNAME : Bool;
					var MANAGE_NICKNAMES : Bool;
					var MANAGE_ROLES : Bool;
					var MANAGE_WEBHOOKS : Bool;
					var MANAGE_EMOJIS : Bool;
				};
				dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
				dynamic function toJSON():Float;
				dynamic function valueOf():Float;
			};
			dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
			dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
			dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
				var CREATE_INSTANT_INVITE : Bool;
				var KICK_MEMBERS : Bool;
				var BAN_MEMBERS : Bool;
				var ADMINISTRATOR : Bool;
				var MANAGE_CHANNELS : Bool;
				var MANAGE_GUILD : Bool;
				var ADD_REACTIONS : Bool;
				var VIEW_AUDIT_LOG : Bool;
				var PRIORITY_SPEAKER : Bool;
				var STREAM : Bool;
				var VIEW_CHANNEL : Bool;
				var SEND_MESSAGES : Bool;
				var SEND_TTS_MESSAGES : Bool;
				var MANAGE_MESSAGES : Bool;
				var EMBED_LINKS : Bool;
				var ATTACH_FILES : Bool;
				var READ_MESSAGE_HISTORY : Bool;
				var MENTION_EVERYONE : Bool;
				var USE_EXTERNAL_EMOJIS : Bool;
				var VIEW_GUILD_INSIGHTS : Bool;
				var CONNECT : Bool;
				var SPEAK : Bool;
				var MUTE_MEMBERS : Bool;
				var DEAFEN_MEMBERS : Bool;
				var MOVE_MEMBERS : Bool;
				var USE_VAD : Bool;
				var CHANGE_NICKNAME : Bool;
				var MANAGE_NICKNAMES : Bool;
				var MANAGE_ROLES : Bool;
				var MANAGE_WEBHOOKS : Bool;
				var MANAGE_EMOJIS : Bool;
			};
			dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
			dynamic function toJSON():Float;
			dynamic function valueOf():Float;
		};
		dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
		dynamic function toJSON():Float;
		dynamic function valueOf():Float;
	};
	private function rolePermissions(role:Role):{
		dynamic function any(permission:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Bool;
		dynamic function has(permission:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Bool;
		dynamic function missing(bits:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Array<PermissionString>;
		dynamic function serialize(?checkAdmin:Bool):{
			var CREATE_INSTANT_INVITE : Bool;
			var KICK_MEMBERS : Bool;
			var BAN_MEMBERS : Bool;
			var ADMINISTRATOR : Bool;
			var MANAGE_CHANNELS : Bool;
			var MANAGE_GUILD : Bool;
			var ADD_REACTIONS : Bool;
			var VIEW_AUDIT_LOG : Bool;
			var PRIORITY_SPEAKER : Bool;
			var STREAM : Bool;
			var VIEW_CHANNEL : Bool;
			var SEND_MESSAGES : Bool;
			var SEND_TTS_MESSAGES : Bool;
			var MANAGE_MESSAGES : Bool;
			var EMBED_LINKS : Bool;
			var ATTACH_FILES : Bool;
			var READ_MESSAGE_HISTORY : Bool;
			var MENTION_EVERYONE : Bool;
			var USE_EXTERNAL_EMOJIS : Bool;
			var VIEW_GUILD_INSIGHTS : Bool;
			var CONNECT : Bool;
			var SPEAK : Bool;
			var MUTE_MEMBERS : Bool;
			var DEAFEN_MEMBERS : Bool;
			var MOVE_MEMBERS : Bool;
			var USE_VAD : Bool;
			var CHANGE_NICKNAME : Bool;
			var MANAGE_NICKNAMES : Bool;
			var MANAGE_ROLES : Bool;
			var MANAGE_WEBHOOKS : Bool;
			var MANAGE_EMOJIS : Bool;
		};
		dynamic function toArray(?checkAdmin:Bool):Array<PermissionString>;
		var bitfield : Float;
		dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
		dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
		dynamic function freeze():{
			var bitfield : Float;
			dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
			dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function freeze():{
				var bitfield : Float;
				dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
				dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function freeze():{
					var bitfield : Float;
					dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
					dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function freeze():{
						var bitfield : Float;
						dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
						dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function freeze():{
							var bitfield : Float;
							dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
							dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function freeze():{
								var bitfield : Float;
								dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
								dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function freeze():{
									var bitfield : Float;
									dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
									dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function freeze():{
										var bitfield : Float;
										dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
										dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function freeze():{
											var bitfield : Float;
											dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
											dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function freeze():{
												var bitfield : Float;
												dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
												dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function freeze():{
													var bitfield : Float;
													dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
													dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function freeze():{
														var bitfield : Float;
														dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
														dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function freeze():{
															var bitfield : Float;
															dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
															dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function freeze():{
																var bitfield : Float;
																dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function freeze():{
																	var bitfield : Float;
																	dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																	dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function freeze():{
																		var bitfield : Float;
																		dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																		dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function freeze():{
																			var bitfield : Float;
																			dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																			dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function freeze():{
																				var bitfield : Float;
																				dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																				dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function freeze():{
																					var bitfield : Float;
																					dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																					dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function freeze():{
																						var bitfield : Float;
																						dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																						dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function freeze():{
																							var bitfield : Float;
																							dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																							dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function freeze():{
																								var bitfield : Float;
																								dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>;
																								dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																								dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																								dynamic function freeze():{
																									var bitfield : Float;
																									dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																									dynamic function any(bit:BitFieldResolvable<Dynamic>):Bool;
																									dynamic function equals(bit:BitFieldResolvable<Dynamic>):Bool;
																									dynamic function freeze():{
																										var bitfield : Dynamic;
																										dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function any(bit:Dynamic):Dynamic;
																										dynamic function equals(bit:Dynamic):Dynamic;
																										dynamic function freeze():Dynamic;
																										dynamic function has(bit:Dynamic):Dynamic;
																										dynamic function missing(bits:Dynamic, hasParam:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function serialize(hasParam:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic;
																										dynamic function toJSON():Dynamic;
																										dynamic function valueOf():Dynamic;
																									};
																									dynamic function has(bit:BitFieldResolvable<Dynamic>):Bool;
																									dynamic function missing(bits:BitFieldResolvable<Dynamic>, hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																									dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																									dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																										var CREATE_INSTANT_INVITE : Dynamic;
																										var KICK_MEMBERS : Dynamic;
																										var BAN_MEMBERS : Dynamic;
																										var ADMINISTRATOR : Dynamic;
																										var MANAGE_CHANNELS : Dynamic;
																										var MANAGE_GUILD : Dynamic;
																										var ADD_REACTIONS : Dynamic;
																										var VIEW_AUDIT_LOG : Dynamic;
																										var PRIORITY_SPEAKER : Dynamic;
																										var STREAM : Dynamic;
																										var VIEW_CHANNEL : Dynamic;
																										var SEND_MESSAGES : Dynamic;
																										var SEND_TTS_MESSAGES : Dynamic;
																										var MANAGE_MESSAGES : Dynamic;
																										var EMBED_LINKS : Dynamic;
																										var ATTACH_FILES : Dynamic;
																										var READ_MESSAGE_HISTORY : Dynamic;
																										var MENTION_EVERYONE : Dynamic;
																										var USE_EXTERNAL_EMOJIS : Dynamic;
																										var VIEW_GUILD_INSIGHTS : Dynamic;
																										var CONNECT : Dynamic;
																										var SPEAK : Dynamic;
																										var MUTE_MEMBERS : Dynamic;
																										var DEAFEN_MEMBERS : Dynamic;
																										var MOVE_MEMBERS : Dynamic;
																										var USE_VAD : Dynamic;
																										var CHANGE_NICKNAME : Dynamic;
																										var MANAGE_NICKNAMES : Dynamic;
																										var MANAGE_ROLES : Dynamic;
																										var MANAGE_WEBHOOKS : Dynamic;
																										var MANAGE_EMOJIS : Dynamic;
																									};
																									dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																									dynamic function toJSON():Float;
																									dynamic function valueOf():Float;
																								};
																								dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																								dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																								dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>;
																								dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																									var CREATE_INSTANT_INVITE : Bool;
																									var KICK_MEMBERS : Bool;
																									var BAN_MEMBERS : Bool;
																									var ADMINISTRATOR : Bool;
																									var MANAGE_CHANNELS : Bool;
																									var MANAGE_GUILD : Bool;
																									var ADD_REACTIONS : Bool;
																									var VIEW_AUDIT_LOG : Bool;
																									var PRIORITY_SPEAKER : Bool;
																									var STREAM : Bool;
																									var VIEW_CHANNEL : Bool;
																									var SEND_MESSAGES : Bool;
																									var SEND_TTS_MESSAGES : Bool;
																									var MANAGE_MESSAGES : Bool;
																									var EMBED_LINKS : Bool;
																									var ATTACH_FILES : Bool;
																									var READ_MESSAGE_HISTORY : Bool;
																									var MENTION_EVERYONE : Bool;
																									var USE_EXTERNAL_EMOJIS : Bool;
																									var VIEW_GUILD_INSIGHTS : Bool;
																									var CONNECT : Bool;
																									var SPEAK : Bool;
																									var MUTE_MEMBERS : Bool;
																									var DEAFEN_MEMBERS : Bool;
																									var MOVE_MEMBERS : Bool;
																									var USE_VAD : Bool;
																									var CHANGE_NICKNAME : Bool;
																									var MANAGE_NICKNAMES : Bool;
																									var MANAGE_ROLES : Bool;
																									var MANAGE_WEBHOOKS : Bool;
																									var MANAGE_EMOJIS : Bool;
																								};
																								dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																								dynamic function toJSON():Float;
																								dynamic function valueOf():Float;
																							};
																							dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																							dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																							dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																								var CREATE_INSTANT_INVITE : Bool;
																								var KICK_MEMBERS : Bool;
																								var BAN_MEMBERS : Bool;
																								var ADMINISTRATOR : Bool;
																								var MANAGE_CHANNELS : Bool;
																								var MANAGE_GUILD : Bool;
																								var ADD_REACTIONS : Bool;
																								var VIEW_AUDIT_LOG : Bool;
																								var PRIORITY_SPEAKER : Bool;
																								var STREAM : Bool;
																								var VIEW_CHANNEL : Bool;
																								var SEND_MESSAGES : Bool;
																								var SEND_TTS_MESSAGES : Bool;
																								var MANAGE_MESSAGES : Bool;
																								var EMBED_LINKS : Bool;
																								var ATTACH_FILES : Bool;
																								var READ_MESSAGE_HISTORY : Bool;
																								var MENTION_EVERYONE : Bool;
																								var USE_EXTERNAL_EMOJIS : Bool;
																								var VIEW_GUILD_INSIGHTS : Bool;
																								var CONNECT : Bool;
																								var SPEAK : Bool;
																								var MUTE_MEMBERS : Bool;
																								var DEAFEN_MEMBERS : Bool;
																								var MOVE_MEMBERS : Bool;
																								var USE_VAD : Bool;
																								var CHANGE_NICKNAME : Bool;
																								var MANAGE_NICKNAMES : Bool;
																								var MANAGE_ROLES : Bool;
																								var MANAGE_WEBHOOKS : Bool;
																								var MANAGE_EMOJIS : Bool;
																							};
																							dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																							dynamic function toJSON():Float;
																							dynamic function valueOf():Float;
																						};
																						dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																						dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																						dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																							var CREATE_INSTANT_INVITE : Bool;
																							var KICK_MEMBERS : Bool;
																							var BAN_MEMBERS : Bool;
																							var ADMINISTRATOR : Bool;
																							var MANAGE_CHANNELS : Bool;
																							var MANAGE_GUILD : Bool;
																							var ADD_REACTIONS : Bool;
																							var VIEW_AUDIT_LOG : Bool;
																							var PRIORITY_SPEAKER : Bool;
																							var STREAM : Bool;
																							var VIEW_CHANNEL : Bool;
																							var SEND_MESSAGES : Bool;
																							var SEND_TTS_MESSAGES : Bool;
																							var MANAGE_MESSAGES : Bool;
																							var EMBED_LINKS : Bool;
																							var ATTACH_FILES : Bool;
																							var READ_MESSAGE_HISTORY : Bool;
																							var MENTION_EVERYONE : Bool;
																							var USE_EXTERNAL_EMOJIS : Bool;
																							var VIEW_GUILD_INSIGHTS : Bool;
																							var CONNECT : Bool;
																							var SPEAK : Bool;
																							var MUTE_MEMBERS : Bool;
																							var DEAFEN_MEMBERS : Bool;
																							var MOVE_MEMBERS : Bool;
																							var USE_VAD : Bool;
																							var CHANGE_NICKNAME : Bool;
																							var MANAGE_NICKNAMES : Bool;
																							var MANAGE_ROLES : Bool;
																							var MANAGE_WEBHOOKS : Bool;
																							var MANAGE_EMOJIS : Bool;
																						};
																						dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																						dynamic function toJSON():Float;
																						dynamic function valueOf():Float;
																					};
																					dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																					dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																					dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																						var CREATE_INSTANT_INVITE : Bool;
																						var KICK_MEMBERS : Bool;
																						var BAN_MEMBERS : Bool;
																						var ADMINISTRATOR : Bool;
																						var MANAGE_CHANNELS : Bool;
																						var MANAGE_GUILD : Bool;
																						var ADD_REACTIONS : Bool;
																						var VIEW_AUDIT_LOG : Bool;
																						var PRIORITY_SPEAKER : Bool;
																						var STREAM : Bool;
																						var VIEW_CHANNEL : Bool;
																						var SEND_MESSAGES : Bool;
																						var SEND_TTS_MESSAGES : Bool;
																						var MANAGE_MESSAGES : Bool;
																						var EMBED_LINKS : Bool;
																						var ATTACH_FILES : Bool;
																						var READ_MESSAGE_HISTORY : Bool;
																						var MENTION_EVERYONE : Bool;
																						var USE_EXTERNAL_EMOJIS : Bool;
																						var VIEW_GUILD_INSIGHTS : Bool;
																						var CONNECT : Bool;
																						var SPEAK : Bool;
																						var MUTE_MEMBERS : Bool;
																						var DEAFEN_MEMBERS : Bool;
																						var MOVE_MEMBERS : Bool;
																						var USE_VAD : Bool;
																						var CHANGE_NICKNAME : Bool;
																						var MANAGE_NICKNAMES : Bool;
																						var MANAGE_ROLES : Bool;
																						var MANAGE_WEBHOOKS : Bool;
																						var MANAGE_EMOJIS : Bool;
																					};
																					dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																					dynamic function toJSON():Float;
																					dynamic function valueOf():Float;
																				};
																				dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																				dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																				dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																					var CREATE_INSTANT_INVITE : Bool;
																					var KICK_MEMBERS : Bool;
																					var BAN_MEMBERS : Bool;
																					var ADMINISTRATOR : Bool;
																					var MANAGE_CHANNELS : Bool;
																					var MANAGE_GUILD : Bool;
																					var ADD_REACTIONS : Bool;
																					var VIEW_AUDIT_LOG : Bool;
																					var PRIORITY_SPEAKER : Bool;
																					var STREAM : Bool;
																					var VIEW_CHANNEL : Bool;
																					var SEND_MESSAGES : Bool;
																					var SEND_TTS_MESSAGES : Bool;
																					var MANAGE_MESSAGES : Bool;
																					var EMBED_LINKS : Bool;
																					var ATTACH_FILES : Bool;
																					var READ_MESSAGE_HISTORY : Bool;
																					var MENTION_EVERYONE : Bool;
																					var USE_EXTERNAL_EMOJIS : Bool;
																					var VIEW_GUILD_INSIGHTS : Bool;
																					var CONNECT : Bool;
																					var SPEAK : Bool;
																					var MUTE_MEMBERS : Bool;
																					var DEAFEN_MEMBERS : Bool;
																					var MOVE_MEMBERS : Bool;
																					var USE_VAD : Bool;
																					var CHANGE_NICKNAME : Bool;
																					var MANAGE_NICKNAMES : Bool;
																					var MANAGE_ROLES : Bool;
																					var MANAGE_WEBHOOKS : Bool;
																					var MANAGE_EMOJIS : Bool;
																				};
																				dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																				dynamic function toJSON():Float;
																				dynamic function valueOf():Float;
																			};
																			dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																			dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																			dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																				var CREATE_INSTANT_INVITE : Bool;
																				var KICK_MEMBERS : Bool;
																				var BAN_MEMBERS : Bool;
																				var ADMINISTRATOR : Bool;
																				var MANAGE_CHANNELS : Bool;
																				var MANAGE_GUILD : Bool;
																				var ADD_REACTIONS : Bool;
																				var VIEW_AUDIT_LOG : Bool;
																				var PRIORITY_SPEAKER : Bool;
																				var STREAM : Bool;
																				var VIEW_CHANNEL : Bool;
																				var SEND_MESSAGES : Bool;
																				var SEND_TTS_MESSAGES : Bool;
																				var MANAGE_MESSAGES : Bool;
																				var EMBED_LINKS : Bool;
																				var ATTACH_FILES : Bool;
																				var READ_MESSAGE_HISTORY : Bool;
																				var MENTION_EVERYONE : Bool;
																				var USE_EXTERNAL_EMOJIS : Bool;
																				var VIEW_GUILD_INSIGHTS : Bool;
																				var CONNECT : Bool;
																				var SPEAK : Bool;
																				var MUTE_MEMBERS : Bool;
																				var DEAFEN_MEMBERS : Bool;
																				var MOVE_MEMBERS : Bool;
																				var USE_VAD : Bool;
																				var CHANGE_NICKNAME : Bool;
																				var MANAGE_NICKNAMES : Bool;
																				var MANAGE_ROLES : Bool;
																				var MANAGE_WEBHOOKS : Bool;
																				var MANAGE_EMOJIS : Bool;
																			};
																			dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																			dynamic function toJSON():Float;
																			dynamic function valueOf():Float;
																		};
																		dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																		dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																		dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																			var CREATE_INSTANT_INVITE : Bool;
																			var KICK_MEMBERS : Bool;
																			var BAN_MEMBERS : Bool;
																			var ADMINISTRATOR : Bool;
																			var MANAGE_CHANNELS : Bool;
																			var MANAGE_GUILD : Bool;
																			var ADD_REACTIONS : Bool;
																			var VIEW_AUDIT_LOG : Bool;
																			var PRIORITY_SPEAKER : Bool;
																			var STREAM : Bool;
																			var VIEW_CHANNEL : Bool;
																			var SEND_MESSAGES : Bool;
																			var SEND_TTS_MESSAGES : Bool;
																			var MANAGE_MESSAGES : Bool;
																			var EMBED_LINKS : Bool;
																			var ATTACH_FILES : Bool;
																			var READ_MESSAGE_HISTORY : Bool;
																			var MENTION_EVERYONE : Bool;
																			var USE_EXTERNAL_EMOJIS : Bool;
																			var VIEW_GUILD_INSIGHTS : Bool;
																			var CONNECT : Bool;
																			var SPEAK : Bool;
																			var MUTE_MEMBERS : Bool;
																			var DEAFEN_MEMBERS : Bool;
																			var MOVE_MEMBERS : Bool;
																			var USE_VAD : Bool;
																			var CHANGE_NICKNAME : Bool;
																			var MANAGE_NICKNAMES : Bool;
																			var MANAGE_ROLES : Bool;
																			var MANAGE_WEBHOOKS : Bool;
																			var MANAGE_EMOJIS : Bool;
																		};
																		dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																		dynamic function toJSON():Float;
																		dynamic function valueOf():Float;
																	};
																	dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																	dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																	dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																		var CREATE_INSTANT_INVITE : Bool;
																		var KICK_MEMBERS : Bool;
																		var BAN_MEMBERS : Bool;
																		var ADMINISTRATOR : Bool;
																		var MANAGE_CHANNELS : Bool;
																		var MANAGE_GUILD : Bool;
																		var ADD_REACTIONS : Bool;
																		var VIEW_AUDIT_LOG : Bool;
																		var PRIORITY_SPEAKER : Bool;
																		var STREAM : Bool;
																		var VIEW_CHANNEL : Bool;
																		var SEND_MESSAGES : Bool;
																		var SEND_TTS_MESSAGES : Bool;
																		var MANAGE_MESSAGES : Bool;
																		var EMBED_LINKS : Bool;
																		var ATTACH_FILES : Bool;
																		var READ_MESSAGE_HISTORY : Bool;
																		var MENTION_EVERYONE : Bool;
																		var USE_EXTERNAL_EMOJIS : Bool;
																		var VIEW_GUILD_INSIGHTS : Bool;
																		var CONNECT : Bool;
																		var SPEAK : Bool;
																		var MUTE_MEMBERS : Bool;
																		var DEAFEN_MEMBERS : Bool;
																		var MOVE_MEMBERS : Bool;
																		var USE_VAD : Bool;
																		var CHANGE_NICKNAME : Bool;
																		var MANAGE_NICKNAMES : Bool;
																		var MANAGE_ROLES : Bool;
																		var MANAGE_WEBHOOKS : Bool;
																		var MANAGE_EMOJIS : Bool;
																	};
																	dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																	dynamic function toJSON():Float;
																	dynamic function valueOf():Float;
																};
																dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																	var CREATE_INSTANT_INVITE : Bool;
																	var KICK_MEMBERS : Bool;
																	var BAN_MEMBERS : Bool;
																	var ADMINISTRATOR : Bool;
																	var MANAGE_CHANNELS : Bool;
																	var MANAGE_GUILD : Bool;
																	var ADD_REACTIONS : Bool;
																	var VIEW_AUDIT_LOG : Bool;
																	var PRIORITY_SPEAKER : Bool;
																	var STREAM : Bool;
																	var VIEW_CHANNEL : Bool;
																	var SEND_MESSAGES : Bool;
																	var SEND_TTS_MESSAGES : Bool;
																	var MANAGE_MESSAGES : Bool;
																	var EMBED_LINKS : Bool;
																	var ATTACH_FILES : Bool;
																	var READ_MESSAGE_HISTORY : Bool;
																	var MENTION_EVERYONE : Bool;
																	var USE_EXTERNAL_EMOJIS : Bool;
																	var VIEW_GUILD_INSIGHTS : Bool;
																	var CONNECT : Bool;
																	var SPEAK : Bool;
																	var MUTE_MEMBERS : Bool;
																	var DEAFEN_MEMBERS : Bool;
																	var MOVE_MEMBERS : Bool;
																	var USE_VAD : Bool;
																	var CHANGE_NICKNAME : Bool;
																	var MANAGE_NICKNAMES : Bool;
																	var MANAGE_ROLES : Bool;
																	var MANAGE_WEBHOOKS : Bool;
																	var MANAGE_EMOJIS : Bool;
																};
																dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																dynamic function toJSON():Float;
																dynamic function valueOf():Float;
															};
															dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
															dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
															dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																var CREATE_INSTANT_INVITE : Bool;
																var KICK_MEMBERS : Bool;
																var BAN_MEMBERS : Bool;
																var ADMINISTRATOR : Bool;
																var MANAGE_CHANNELS : Bool;
																var MANAGE_GUILD : Bool;
																var ADD_REACTIONS : Bool;
																var VIEW_AUDIT_LOG : Bool;
																var PRIORITY_SPEAKER : Bool;
																var STREAM : Bool;
																var VIEW_CHANNEL : Bool;
																var SEND_MESSAGES : Bool;
																var SEND_TTS_MESSAGES : Bool;
																var MANAGE_MESSAGES : Bool;
																var EMBED_LINKS : Bool;
																var ATTACH_FILES : Bool;
																var READ_MESSAGE_HISTORY : Bool;
																var MENTION_EVERYONE : Bool;
																var USE_EXTERNAL_EMOJIS : Bool;
																var VIEW_GUILD_INSIGHTS : Bool;
																var CONNECT : Bool;
																var SPEAK : Bool;
																var MUTE_MEMBERS : Bool;
																var DEAFEN_MEMBERS : Bool;
																var MOVE_MEMBERS : Bool;
																var USE_VAD : Bool;
																var CHANGE_NICKNAME : Bool;
																var MANAGE_NICKNAMES : Bool;
																var MANAGE_ROLES : Bool;
																var MANAGE_WEBHOOKS : Bool;
																var MANAGE_EMOJIS : Bool;
															};
															dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
															dynamic function toJSON():Float;
															dynamic function valueOf():Float;
														};
														dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
														dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
														dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
															var CREATE_INSTANT_INVITE : Bool;
															var KICK_MEMBERS : Bool;
															var BAN_MEMBERS : Bool;
															var ADMINISTRATOR : Bool;
															var MANAGE_CHANNELS : Bool;
															var MANAGE_GUILD : Bool;
															var ADD_REACTIONS : Bool;
															var VIEW_AUDIT_LOG : Bool;
															var PRIORITY_SPEAKER : Bool;
															var STREAM : Bool;
															var VIEW_CHANNEL : Bool;
															var SEND_MESSAGES : Bool;
															var SEND_TTS_MESSAGES : Bool;
															var MANAGE_MESSAGES : Bool;
															var EMBED_LINKS : Bool;
															var ATTACH_FILES : Bool;
															var READ_MESSAGE_HISTORY : Bool;
															var MENTION_EVERYONE : Bool;
															var USE_EXTERNAL_EMOJIS : Bool;
															var VIEW_GUILD_INSIGHTS : Bool;
															var CONNECT : Bool;
															var SPEAK : Bool;
															var MUTE_MEMBERS : Bool;
															var DEAFEN_MEMBERS : Bool;
															var MOVE_MEMBERS : Bool;
															var USE_VAD : Bool;
															var CHANGE_NICKNAME : Bool;
															var MANAGE_NICKNAMES : Bool;
															var MANAGE_ROLES : Bool;
															var MANAGE_WEBHOOKS : Bool;
															var MANAGE_EMOJIS : Bool;
														};
														dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
														dynamic function toJSON():Float;
														dynamic function valueOf():Float;
													};
													dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
													dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
													dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
														var CREATE_INSTANT_INVITE : Bool;
														var KICK_MEMBERS : Bool;
														var BAN_MEMBERS : Bool;
														var ADMINISTRATOR : Bool;
														var MANAGE_CHANNELS : Bool;
														var MANAGE_GUILD : Bool;
														var ADD_REACTIONS : Bool;
														var VIEW_AUDIT_LOG : Bool;
														var PRIORITY_SPEAKER : Bool;
														var STREAM : Bool;
														var VIEW_CHANNEL : Bool;
														var SEND_MESSAGES : Bool;
														var SEND_TTS_MESSAGES : Bool;
														var MANAGE_MESSAGES : Bool;
														var EMBED_LINKS : Bool;
														var ATTACH_FILES : Bool;
														var READ_MESSAGE_HISTORY : Bool;
														var MENTION_EVERYONE : Bool;
														var USE_EXTERNAL_EMOJIS : Bool;
														var VIEW_GUILD_INSIGHTS : Bool;
														var CONNECT : Bool;
														var SPEAK : Bool;
														var MUTE_MEMBERS : Bool;
														var DEAFEN_MEMBERS : Bool;
														var MOVE_MEMBERS : Bool;
														var USE_VAD : Bool;
														var CHANGE_NICKNAME : Bool;
														var MANAGE_NICKNAMES : Bool;
														var MANAGE_ROLES : Bool;
														var MANAGE_WEBHOOKS : Bool;
														var MANAGE_EMOJIS : Bool;
													};
													dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
													dynamic function toJSON():Float;
													dynamic function valueOf():Float;
												};
												dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
												dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
												dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
													var CREATE_INSTANT_INVITE : Bool;
													var KICK_MEMBERS : Bool;
													var BAN_MEMBERS : Bool;
													var ADMINISTRATOR : Bool;
													var MANAGE_CHANNELS : Bool;
													var MANAGE_GUILD : Bool;
													var ADD_REACTIONS : Bool;
													var VIEW_AUDIT_LOG : Bool;
													var PRIORITY_SPEAKER : Bool;
													var STREAM : Bool;
													var VIEW_CHANNEL : Bool;
													var SEND_MESSAGES : Bool;
													var SEND_TTS_MESSAGES : Bool;
													var MANAGE_MESSAGES : Bool;
													var EMBED_LINKS : Bool;
													var ATTACH_FILES : Bool;
													var READ_MESSAGE_HISTORY : Bool;
													var MENTION_EVERYONE : Bool;
													var USE_EXTERNAL_EMOJIS : Bool;
													var VIEW_GUILD_INSIGHTS : Bool;
													var CONNECT : Bool;
													var SPEAK : Bool;
													var MUTE_MEMBERS : Bool;
													var DEAFEN_MEMBERS : Bool;
													var MOVE_MEMBERS : Bool;
													var USE_VAD : Bool;
													var CHANGE_NICKNAME : Bool;
													var MANAGE_NICKNAMES : Bool;
													var MANAGE_ROLES : Bool;
													var MANAGE_WEBHOOKS : Bool;
													var MANAGE_EMOJIS : Bool;
												};
												dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
												dynamic function toJSON():Float;
												dynamic function valueOf():Float;
											};
											dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
											dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
											dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
												var CREATE_INSTANT_INVITE : Bool;
												var KICK_MEMBERS : Bool;
												var BAN_MEMBERS : Bool;
												var ADMINISTRATOR : Bool;
												var MANAGE_CHANNELS : Bool;
												var MANAGE_GUILD : Bool;
												var ADD_REACTIONS : Bool;
												var VIEW_AUDIT_LOG : Bool;
												var PRIORITY_SPEAKER : Bool;
												var STREAM : Bool;
												var VIEW_CHANNEL : Bool;
												var SEND_MESSAGES : Bool;
												var SEND_TTS_MESSAGES : Bool;
												var MANAGE_MESSAGES : Bool;
												var EMBED_LINKS : Bool;
												var ATTACH_FILES : Bool;
												var READ_MESSAGE_HISTORY : Bool;
												var MENTION_EVERYONE : Bool;
												var USE_EXTERNAL_EMOJIS : Bool;
												var VIEW_GUILD_INSIGHTS : Bool;
												var CONNECT : Bool;
												var SPEAK : Bool;
												var MUTE_MEMBERS : Bool;
												var DEAFEN_MEMBERS : Bool;
												var MOVE_MEMBERS : Bool;
												var USE_VAD : Bool;
												var CHANGE_NICKNAME : Bool;
												var MANAGE_NICKNAMES : Bool;
												var MANAGE_ROLES : Bool;
												var MANAGE_WEBHOOKS : Bool;
												var MANAGE_EMOJIS : Bool;
											};
											dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
											dynamic function toJSON():Float;
											dynamic function valueOf():Float;
										};
										dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
										dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
										dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
											var CREATE_INSTANT_INVITE : Bool;
											var KICK_MEMBERS : Bool;
											var BAN_MEMBERS : Bool;
											var ADMINISTRATOR : Bool;
											var MANAGE_CHANNELS : Bool;
											var MANAGE_GUILD : Bool;
											var ADD_REACTIONS : Bool;
											var VIEW_AUDIT_LOG : Bool;
											var PRIORITY_SPEAKER : Bool;
											var STREAM : Bool;
											var VIEW_CHANNEL : Bool;
											var SEND_MESSAGES : Bool;
											var SEND_TTS_MESSAGES : Bool;
											var MANAGE_MESSAGES : Bool;
											var EMBED_LINKS : Bool;
											var ATTACH_FILES : Bool;
											var READ_MESSAGE_HISTORY : Bool;
											var MENTION_EVERYONE : Bool;
											var USE_EXTERNAL_EMOJIS : Bool;
											var VIEW_GUILD_INSIGHTS : Bool;
											var CONNECT : Bool;
											var SPEAK : Bool;
											var MUTE_MEMBERS : Bool;
											var DEAFEN_MEMBERS : Bool;
											var MOVE_MEMBERS : Bool;
											var USE_VAD : Bool;
											var CHANGE_NICKNAME : Bool;
											var MANAGE_NICKNAMES : Bool;
											var MANAGE_ROLES : Bool;
											var MANAGE_WEBHOOKS : Bool;
											var MANAGE_EMOJIS : Bool;
										};
										dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
										dynamic function toJSON():Float;
										dynamic function valueOf():Float;
									};
									dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
									dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
									dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
										var CREATE_INSTANT_INVITE : Bool;
										var KICK_MEMBERS : Bool;
										var BAN_MEMBERS : Bool;
										var ADMINISTRATOR : Bool;
										var MANAGE_CHANNELS : Bool;
										var MANAGE_GUILD : Bool;
										var ADD_REACTIONS : Bool;
										var VIEW_AUDIT_LOG : Bool;
										var PRIORITY_SPEAKER : Bool;
										var STREAM : Bool;
										var VIEW_CHANNEL : Bool;
										var SEND_MESSAGES : Bool;
										var SEND_TTS_MESSAGES : Bool;
										var MANAGE_MESSAGES : Bool;
										var EMBED_LINKS : Bool;
										var ATTACH_FILES : Bool;
										var READ_MESSAGE_HISTORY : Bool;
										var MENTION_EVERYONE : Bool;
										var USE_EXTERNAL_EMOJIS : Bool;
										var VIEW_GUILD_INSIGHTS : Bool;
										var CONNECT : Bool;
										var SPEAK : Bool;
										var MUTE_MEMBERS : Bool;
										var DEAFEN_MEMBERS : Bool;
										var MOVE_MEMBERS : Bool;
										var USE_VAD : Bool;
										var CHANGE_NICKNAME : Bool;
										var MANAGE_NICKNAMES : Bool;
										var MANAGE_ROLES : Bool;
										var MANAGE_WEBHOOKS : Bool;
										var MANAGE_EMOJIS : Bool;
									};
									dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
									dynamic function toJSON():Float;
									dynamic function valueOf():Float;
								};
								dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
								dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
								dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
									var CREATE_INSTANT_INVITE : Bool;
									var KICK_MEMBERS : Bool;
									var BAN_MEMBERS : Bool;
									var ADMINISTRATOR : Bool;
									var MANAGE_CHANNELS : Bool;
									var MANAGE_GUILD : Bool;
									var ADD_REACTIONS : Bool;
									var VIEW_AUDIT_LOG : Bool;
									var PRIORITY_SPEAKER : Bool;
									var STREAM : Bool;
									var VIEW_CHANNEL : Bool;
									var SEND_MESSAGES : Bool;
									var SEND_TTS_MESSAGES : Bool;
									var MANAGE_MESSAGES : Bool;
									var EMBED_LINKS : Bool;
									var ATTACH_FILES : Bool;
									var READ_MESSAGE_HISTORY : Bool;
									var MENTION_EVERYONE : Bool;
									var USE_EXTERNAL_EMOJIS : Bool;
									var VIEW_GUILD_INSIGHTS : Bool;
									var CONNECT : Bool;
									var SPEAK : Bool;
									var MUTE_MEMBERS : Bool;
									var DEAFEN_MEMBERS : Bool;
									var MOVE_MEMBERS : Bool;
									var USE_VAD : Bool;
									var CHANGE_NICKNAME : Bool;
									var MANAGE_NICKNAMES : Bool;
									var MANAGE_ROLES : Bool;
									var MANAGE_WEBHOOKS : Bool;
									var MANAGE_EMOJIS : Bool;
								};
								dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
								dynamic function toJSON():Float;
								dynamic function valueOf():Float;
							};
							dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
							dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
							dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
								var CREATE_INSTANT_INVITE : Bool;
								var KICK_MEMBERS : Bool;
								var BAN_MEMBERS : Bool;
								var ADMINISTRATOR : Bool;
								var MANAGE_CHANNELS : Bool;
								var MANAGE_GUILD : Bool;
								var ADD_REACTIONS : Bool;
								var VIEW_AUDIT_LOG : Bool;
								var PRIORITY_SPEAKER : Bool;
								var STREAM : Bool;
								var VIEW_CHANNEL : Bool;
								var SEND_MESSAGES : Bool;
								var SEND_TTS_MESSAGES : Bool;
								var MANAGE_MESSAGES : Bool;
								var EMBED_LINKS : Bool;
								var ATTACH_FILES : Bool;
								var READ_MESSAGE_HISTORY : Bool;
								var MENTION_EVERYONE : Bool;
								var USE_EXTERNAL_EMOJIS : Bool;
								var VIEW_GUILD_INSIGHTS : Bool;
								var CONNECT : Bool;
								var SPEAK : Bool;
								var MUTE_MEMBERS : Bool;
								var DEAFEN_MEMBERS : Bool;
								var MOVE_MEMBERS : Bool;
								var USE_VAD : Bool;
								var CHANGE_NICKNAME : Bool;
								var MANAGE_NICKNAMES : Bool;
								var MANAGE_ROLES : Bool;
								var MANAGE_WEBHOOKS : Bool;
								var MANAGE_EMOJIS : Bool;
							};
							dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
							dynamic function toJSON():Float;
							dynamic function valueOf():Float;
						};
						dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
						dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
						dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
							var CREATE_INSTANT_INVITE : Bool;
							var KICK_MEMBERS : Bool;
							var BAN_MEMBERS : Bool;
							var ADMINISTRATOR : Bool;
							var MANAGE_CHANNELS : Bool;
							var MANAGE_GUILD : Bool;
							var ADD_REACTIONS : Bool;
							var VIEW_AUDIT_LOG : Bool;
							var PRIORITY_SPEAKER : Bool;
							var STREAM : Bool;
							var VIEW_CHANNEL : Bool;
							var SEND_MESSAGES : Bool;
							var SEND_TTS_MESSAGES : Bool;
							var MANAGE_MESSAGES : Bool;
							var EMBED_LINKS : Bool;
							var ATTACH_FILES : Bool;
							var READ_MESSAGE_HISTORY : Bool;
							var MENTION_EVERYONE : Bool;
							var USE_EXTERNAL_EMOJIS : Bool;
							var VIEW_GUILD_INSIGHTS : Bool;
							var CONNECT : Bool;
							var SPEAK : Bool;
							var MUTE_MEMBERS : Bool;
							var DEAFEN_MEMBERS : Bool;
							var MOVE_MEMBERS : Bool;
							var USE_VAD : Bool;
							var CHANGE_NICKNAME : Bool;
							var MANAGE_NICKNAMES : Bool;
							var MANAGE_ROLES : Bool;
							var MANAGE_WEBHOOKS : Bool;
							var MANAGE_EMOJIS : Bool;
						};
						dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
						dynamic function toJSON():Float;
						dynamic function valueOf():Float;
					};
					dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
					dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
					dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
						var CREATE_INSTANT_INVITE : Bool;
						var KICK_MEMBERS : Bool;
						var BAN_MEMBERS : Bool;
						var ADMINISTRATOR : Bool;
						var MANAGE_CHANNELS : Bool;
						var MANAGE_GUILD : Bool;
						var ADD_REACTIONS : Bool;
						var VIEW_AUDIT_LOG : Bool;
						var PRIORITY_SPEAKER : Bool;
						var STREAM : Bool;
						var VIEW_CHANNEL : Bool;
						var SEND_MESSAGES : Bool;
						var SEND_TTS_MESSAGES : Bool;
						var MANAGE_MESSAGES : Bool;
						var EMBED_LINKS : Bool;
						var ATTACH_FILES : Bool;
						var READ_MESSAGE_HISTORY : Bool;
						var MENTION_EVERYONE : Bool;
						var USE_EXTERNAL_EMOJIS : Bool;
						var VIEW_GUILD_INSIGHTS : Bool;
						var CONNECT : Bool;
						var SPEAK : Bool;
						var MUTE_MEMBERS : Bool;
						var DEAFEN_MEMBERS : Bool;
						var MOVE_MEMBERS : Bool;
						var USE_VAD : Bool;
						var CHANGE_NICKNAME : Bool;
						var MANAGE_NICKNAMES : Bool;
						var MANAGE_ROLES : Bool;
						var MANAGE_WEBHOOKS : Bool;
						var MANAGE_EMOJIS : Bool;
					};
					dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
					dynamic function toJSON():Float;
					dynamic function valueOf():Float;
				};
				dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
				dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
				dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
					var CREATE_INSTANT_INVITE : Bool;
					var KICK_MEMBERS : Bool;
					var BAN_MEMBERS : Bool;
					var ADMINISTRATOR : Bool;
					var MANAGE_CHANNELS : Bool;
					var MANAGE_GUILD : Bool;
					var ADD_REACTIONS : Bool;
					var VIEW_AUDIT_LOG : Bool;
					var PRIORITY_SPEAKER : Bool;
					var STREAM : Bool;
					var VIEW_CHANNEL : Bool;
					var SEND_MESSAGES : Bool;
					var SEND_TTS_MESSAGES : Bool;
					var MANAGE_MESSAGES : Bool;
					var EMBED_LINKS : Bool;
					var ATTACH_FILES : Bool;
					var READ_MESSAGE_HISTORY : Bool;
					var MENTION_EVERYONE : Bool;
					var USE_EXTERNAL_EMOJIS : Bool;
					var VIEW_GUILD_INSIGHTS : Bool;
					var CONNECT : Bool;
					var SPEAK : Bool;
					var MUTE_MEMBERS : Bool;
					var DEAFEN_MEMBERS : Bool;
					var MOVE_MEMBERS : Bool;
					var USE_VAD : Bool;
					var CHANGE_NICKNAME : Bool;
					var MANAGE_NICKNAMES : Bool;
					var MANAGE_ROLES : Bool;
					var MANAGE_WEBHOOKS : Bool;
					var MANAGE_EMOJIS : Bool;
				};
				dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
				dynamic function toJSON():Float;
				dynamic function valueOf():Float;
			};
			dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
			dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
			dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
				var CREATE_INSTANT_INVITE : Bool;
				var KICK_MEMBERS : Bool;
				var BAN_MEMBERS : Bool;
				var ADMINISTRATOR : Bool;
				var MANAGE_CHANNELS : Bool;
				var MANAGE_GUILD : Bool;
				var ADD_REACTIONS : Bool;
				var VIEW_AUDIT_LOG : Bool;
				var PRIORITY_SPEAKER : Bool;
				var STREAM : Bool;
				var VIEW_CHANNEL : Bool;
				var SEND_MESSAGES : Bool;
				var SEND_TTS_MESSAGES : Bool;
				var MANAGE_MESSAGES : Bool;
				var EMBED_LINKS : Bool;
				var ATTACH_FILES : Bool;
				var READ_MESSAGE_HISTORY : Bool;
				var MENTION_EVERYONE : Bool;
				var USE_EXTERNAL_EMOJIS : Bool;
				var VIEW_GUILD_INSIGHTS : Bool;
				var CONNECT : Bool;
				var SPEAK : Bool;
				var MUTE_MEMBERS : Bool;
				var DEAFEN_MEMBERS : Bool;
				var MOVE_MEMBERS : Bool;
				var USE_VAD : Bool;
				var CHANGE_NICKNAME : Bool;
				var MANAGE_NICKNAMES : Bool;
				var MANAGE_ROLES : Bool;
				var MANAGE_WEBHOOKS : Bool;
				var MANAGE_EMOJIS : Bool;
			};
			dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
			dynamic function toJSON():Float;
			dynamic function valueOf():Float;
		};
		dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
		dynamic function toJSON():Float;
		dynamic function valueOf():Float;
	};
	public final calculatedPosition : Float;
	public final deletable : Bool;
	public var guild : Guild;
	public final manageable : Bool;
	public final members : Collection<String, GuildMember>;
	public var name : String;
	public final parent : Null<CategoryChannel>;
	public var parentID : Null<String>;
	public var permissionOverwrites : Collection<String, PermissionOverwrites>;
	public final permissionsLocked : Null<Bool>;
	public final position : Float;
	public var rawPosition : Float;
	public final viewable : Bool;
	public function clone(?options:GuildChannelCloneOptions):js.lib.Promise<GuildChannel>;
	public function createInvite(?options:InviteOptions):js.lib.Promise<Invite>;
	public function createOverwrite(userOrRole:ts.AnyOf5<String, User, GuildMember, Message, Role>, options:PermissionOverwriteOption, ?reason:String):js.lib.Promise<GuildChannel>;
	public function edit(data:ChannelData, ?reason:String):js.lib.Promise<GuildChannel>;
	public function equals(channel:GuildChannel):Bool;
	public function fetchInvites():js.lib.Promise<Collection<String, Invite>>;
	public function lockPermissions():js.lib.Promise<GuildChannel>;
	public function overwritePermissions(overwrites:ts.AnyOf2<haxe.ds.ReadOnlyArray<OverwriteResolvable>, Collection<String, OverwriteResolvable>>, ?reason:String):js.lib.Promise<GuildChannel>;
	public function permissionsFor(memberOrRole:ts.AnyOf5<String, User, GuildMember, Message, Role>):Null<{
		dynamic function any(permission:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Bool;
		dynamic function has(permission:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Bool;
		dynamic function missing(bits:BitFieldResolvable<PermissionString>, ?checkAdmin:Bool):Array<PermissionString>;
		dynamic function serialize(?checkAdmin:Bool):{
			var CREATE_INSTANT_INVITE : Bool;
			var KICK_MEMBERS : Bool;
			var BAN_MEMBERS : Bool;
			var ADMINISTRATOR : Bool;
			var MANAGE_CHANNELS : Bool;
			var MANAGE_GUILD : Bool;
			var ADD_REACTIONS : Bool;
			var VIEW_AUDIT_LOG : Bool;
			var PRIORITY_SPEAKER : Bool;
			var STREAM : Bool;
			var VIEW_CHANNEL : Bool;
			var SEND_MESSAGES : Bool;
			var SEND_TTS_MESSAGES : Bool;
			var MANAGE_MESSAGES : Bool;
			var EMBED_LINKS : Bool;
			var ATTACH_FILES : Bool;
			var READ_MESSAGE_HISTORY : Bool;
			var MENTION_EVERYONE : Bool;
			var USE_EXTERNAL_EMOJIS : Bool;
			var VIEW_GUILD_INSIGHTS : Bool;
			var CONNECT : Bool;
			var SPEAK : Bool;
			var MUTE_MEMBERS : Bool;
			var DEAFEN_MEMBERS : Bool;
			var MOVE_MEMBERS : Bool;
			var USE_VAD : Bool;
			var CHANGE_NICKNAME : Bool;
			var MANAGE_NICKNAMES : Bool;
			var MANAGE_ROLES : Bool;
			var MANAGE_WEBHOOKS : Bool;
			var MANAGE_EMOJIS : Bool;
		};
		dynamic function toArray(?checkAdmin:Bool):Array<PermissionString>;
		var bitfield : Float;
		dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
		dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
		dynamic function freeze():{
			var bitfield : Float;
			dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
			dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function freeze():{
				var bitfield : Float;
				dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
				dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function freeze():{
					var bitfield : Float;
					dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
					dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function freeze():{
						var bitfield : Float;
						dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
						dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function freeze():{
							var bitfield : Float;
							dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
							dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function freeze():{
								var bitfield : Float;
								dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
								dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function freeze():{
									var bitfield : Float;
									dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
									dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function freeze():{
										var bitfield : Float;
										dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
										dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function freeze():{
											var bitfield : Float;
											dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
											dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function freeze():{
												var bitfield : Float;
												dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
												dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function freeze():{
													var bitfield : Float;
													dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
													dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function freeze():{
														var bitfield : Float;
														dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
														dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function freeze():{
															var bitfield : Float;
															dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
															dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function freeze():{
																var bitfield : Float;
																dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function freeze():{
																	var bitfield : Float;
																	dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																	dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function freeze():{
																		var bitfield : Float;
																		dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																		dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function freeze():{
																			var bitfield : Float;
																			dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																			dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function freeze():{
																				var bitfield : Float;
																				dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																				dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function freeze():{
																					var bitfield : Float;
																					dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																					dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function freeze():{
																						var bitfield : Float;
																						dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																						dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function freeze():{
																							var bitfield : Float;
																							dynamic function add(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>;
																							dynamic function any(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function equals(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function freeze():{
																								var bitfield : Float;
																								dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																								dynamic function any(bit:BitFieldResolvable<Dynamic>):Bool;
																								dynamic function equals(bit:BitFieldResolvable<Dynamic>):Bool;
																								dynamic function freeze():{
																									var bitfield : Dynamic;
																									dynamic function add(bits:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function any(bit:Dynamic):Dynamic;
																									dynamic function equals(bit:Dynamic):Dynamic;
																									dynamic function freeze():Dynamic;
																									dynamic function has(bit:Dynamic):Dynamic;
																									dynamic function missing(bits:Dynamic, hasParam:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function serialize(hasParam:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic;
																									dynamic function toJSON():Dynamic;
																									dynamic function valueOf():Dynamic;
																								};
																								dynamic function has(bit:BitFieldResolvable<Dynamic>):Bool;
																								dynamic function missing(bits:BitFieldResolvable<Dynamic>, hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																								dynamic function remove(bits:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																								dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																									var CREATE_INSTANT_INVITE : Dynamic;
																									var KICK_MEMBERS : Dynamic;
																									var BAN_MEMBERS : Dynamic;
																									var ADMINISTRATOR : Dynamic;
																									var MANAGE_CHANNELS : Dynamic;
																									var MANAGE_GUILD : Dynamic;
																									var ADD_REACTIONS : Dynamic;
																									var VIEW_AUDIT_LOG : Dynamic;
																									var PRIORITY_SPEAKER : Dynamic;
																									var STREAM : Dynamic;
																									var VIEW_CHANNEL : Dynamic;
																									var SEND_MESSAGES : Dynamic;
																									var SEND_TTS_MESSAGES : Dynamic;
																									var MANAGE_MESSAGES : Dynamic;
																									var EMBED_LINKS : Dynamic;
																									var ATTACH_FILES : Dynamic;
																									var READ_MESSAGE_HISTORY : Dynamic;
																									var MENTION_EVERYONE : Dynamic;
																									var USE_EXTERNAL_EMOJIS : Dynamic;
																									var VIEW_GUILD_INSIGHTS : Dynamic;
																									var CONNECT : Dynamic;
																									var SPEAK : Dynamic;
																									var MUTE_MEMBERS : Dynamic;
																									var DEAFEN_MEMBERS : Dynamic;
																									var MOVE_MEMBERS : Dynamic;
																									var USE_VAD : Dynamic;
																									var CHANGE_NICKNAME : Dynamic;
																									var MANAGE_NICKNAMES : Dynamic;
																									var MANAGE_ROLES : Dynamic;
																									var MANAGE_WEBHOOKS : Dynamic;
																									var MANAGE_EMOJIS : Dynamic;
																								};
																								dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Dynamic<Dynamic>;
																								dynamic function toJSON():Float;
																								dynamic function valueOf():Float;
																							};
																							dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																							dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																							dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<Dynamic>>):BitField<PermissionString>;
																							dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																								var CREATE_INSTANT_INVITE : Bool;
																								var KICK_MEMBERS : Bool;
																								var BAN_MEMBERS : Bool;
																								var ADMINISTRATOR : Bool;
																								var MANAGE_CHANNELS : Bool;
																								var MANAGE_GUILD : Bool;
																								var ADD_REACTIONS : Bool;
																								var VIEW_AUDIT_LOG : Bool;
																								var PRIORITY_SPEAKER : Bool;
																								var STREAM : Bool;
																								var VIEW_CHANNEL : Bool;
																								var SEND_MESSAGES : Bool;
																								var SEND_TTS_MESSAGES : Bool;
																								var MANAGE_MESSAGES : Bool;
																								var EMBED_LINKS : Bool;
																								var ATTACH_FILES : Bool;
																								var READ_MESSAGE_HISTORY : Bool;
																								var MENTION_EVERYONE : Bool;
																								var USE_EXTERNAL_EMOJIS : Bool;
																								var VIEW_GUILD_INSIGHTS : Bool;
																								var CONNECT : Bool;
																								var SPEAK : Bool;
																								var MUTE_MEMBERS : Bool;
																								var DEAFEN_MEMBERS : Bool;
																								var MOVE_MEMBERS : Bool;
																								var USE_VAD : Bool;
																								var CHANGE_NICKNAME : Bool;
																								var MANAGE_NICKNAMES : Bool;
																								var MANAGE_ROLES : Bool;
																								var MANAGE_WEBHOOKS : Bool;
																								var MANAGE_EMOJIS : Bool;
																							};
																							dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																							dynamic function toJSON():Float;
																							dynamic function valueOf():Float;
																						};
																						dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																						dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																						dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																						dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																							var CREATE_INSTANT_INVITE : Bool;
																							var KICK_MEMBERS : Bool;
																							var BAN_MEMBERS : Bool;
																							var ADMINISTRATOR : Bool;
																							var MANAGE_CHANNELS : Bool;
																							var MANAGE_GUILD : Bool;
																							var ADD_REACTIONS : Bool;
																							var VIEW_AUDIT_LOG : Bool;
																							var PRIORITY_SPEAKER : Bool;
																							var STREAM : Bool;
																							var VIEW_CHANNEL : Bool;
																							var SEND_MESSAGES : Bool;
																							var SEND_TTS_MESSAGES : Bool;
																							var MANAGE_MESSAGES : Bool;
																							var EMBED_LINKS : Bool;
																							var ATTACH_FILES : Bool;
																							var READ_MESSAGE_HISTORY : Bool;
																							var MENTION_EVERYONE : Bool;
																							var USE_EXTERNAL_EMOJIS : Bool;
																							var VIEW_GUILD_INSIGHTS : Bool;
																							var CONNECT : Bool;
																							var SPEAK : Bool;
																							var MUTE_MEMBERS : Bool;
																							var DEAFEN_MEMBERS : Bool;
																							var MOVE_MEMBERS : Bool;
																							var USE_VAD : Bool;
																							var CHANGE_NICKNAME : Bool;
																							var MANAGE_NICKNAMES : Bool;
																							var MANAGE_ROLES : Bool;
																							var MANAGE_WEBHOOKS : Bool;
																							var MANAGE_EMOJIS : Bool;
																						};
																						dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																						dynamic function toJSON():Float;
																						dynamic function valueOf():Float;
																					};
																					dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																					dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																					dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																					dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																						var CREATE_INSTANT_INVITE : Bool;
																						var KICK_MEMBERS : Bool;
																						var BAN_MEMBERS : Bool;
																						var ADMINISTRATOR : Bool;
																						var MANAGE_CHANNELS : Bool;
																						var MANAGE_GUILD : Bool;
																						var ADD_REACTIONS : Bool;
																						var VIEW_AUDIT_LOG : Bool;
																						var PRIORITY_SPEAKER : Bool;
																						var STREAM : Bool;
																						var VIEW_CHANNEL : Bool;
																						var SEND_MESSAGES : Bool;
																						var SEND_TTS_MESSAGES : Bool;
																						var MANAGE_MESSAGES : Bool;
																						var EMBED_LINKS : Bool;
																						var ATTACH_FILES : Bool;
																						var READ_MESSAGE_HISTORY : Bool;
																						var MENTION_EVERYONE : Bool;
																						var USE_EXTERNAL_EMOJIS : Bool;
																						var VIEW_GUILD_INSIGHTS : Bool;
																						var CONNECT : Bool;
																						var SPEAK : Bool;
																						var MUTE_MEMBERS : Bool;
																						var DEAFEN_MEMBERS : Bool;
																						var MOVE_MEMBERS : Bool;
																						var USE_VAD : Bool;
																						var CHANGE_NICKNAME : Bool;
																						var MANAGE_NICKNAMES : Bool;
																						var MANAGE_ROLES : Bool;
																						var MANAGE_WEBHOOKS : Bool;
																						var MANAGE_EMOJIS : Bool;
																					};
																					dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																					dynamic function toJSON():Float;
																					dynamic function valueOf():Float;
																				};
																				dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																				dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																				dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																				dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																					var CREATE_INSTANT_INVITE : Bool;
																					var KICK_MEMBERS : Bool;
																					var BAN_MEMBERS : Bool;
																					var ADMINISTRATOR : Bool;
																					var MANAGE_CHANNELS : Bool;
																					var MANAGE_GUILD : Bool;
																					var ADD_REACTIONS : Bool;
																					var VIEW_AUDIT_LOG : Bool;
																					var PRIORITY_SPEAKER : Bool;
																					var STREAM : Bool;
																					var VIEW_CHANNEL : Bool;
																					var SEND_MESSAGES : Bool;
																					var SEND_TTS_MESSAGES : Bool;
																					var MANAGE_MESSAGES : Bool;
																					var EMBED_LINKS : Bool;
																					var ATTACH_FILES : Bool;
																					var READ_MESSAGE_HISTORY : Bool;
																					var MENTION_EVERYONE : Bool;
																					var USE_EXTERNAL_EMOJIS : Bool;
																					var VIEW_GUILD_INSIGHTS : Bool;
																					var CONNECT : Bool;
																					var SPEAK : Bool;
																					var MUTE_MEMBERS : Bool;
																					var DEAFEN_MEMBERS : Bool;
																					var MOVE_MEMBERS : Bool;
																					var USE_VAD : Bool;
																					var CHANGE_NICKNAME : Bool;
																					var MANAGE_NICKNAMES : Bool;
																					var MANAGE_ROLES : Bool;
																					var MANAGE_WEBHOOKS : Bool;
																					var MANAGE_EMOJIS : Bool;
																				};
																				dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																				dynamic function toJSON():Float;
																				dynamic function valueOf():Float;
																			};
																			dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																			dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																			dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																			dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																				var CREATE_INSTANT_INVITE : Bool;
																				var KICK_MEMBERS : Bool;
																				var BAN_MEMBERS : Bool;
																				var ADMINISTRATOR : Bool;
																				var MANAGE_CHANNELS : Bool;
																				var MANAGE_GUILD : Bool;
																				var ADD_REACTIONS : Bool;
																				var VIEW_AUDIT_LOG : Bool;
																				var PRIORITY_SPEAKER : Bool;
																				var STREAM : Bool;
																				var VIEW_CHANNEL : Bool;
																				var SEND_MESSAGES : Bool;
																				var SEND_TTS_MESSAGES : Bool;
																				var MANAGE_MESSAGES : Bool;
																				var EMBED_LINKS : Bool;
																				var ATTACH_FILES : Bool;
																				var READ_MESSAGE_HISTORY : Bool;
																				var MENTION_EVERYONE : Bool;
																				var USE_EXTERNAL_EMOJIS : Bool;
																				var VIEW_GUILD_INSIGHTS : Bool;
																				var CONNECT : Bool;
																				var SPEAK : Bool;
																				var MUTE_MEMBERS : Bool;
																				var DEAFEN_MEMBERS : Bool;
																				var MOVE_MEMBERS : Bool;
																				var USE_VAD : Bool;
																				var CHANGE_NICKNAME : Bool;
																				var MANAGE_NICKNAMES : Bool;
																				var MANAGE_ROLES : Bool;
																				var MANAGE_WEBHOOKS : Bool;
																				var MANAGE_EMOJIS : Bool;
																			};
																			dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																			dynamic function toJSON():Float;
																			dynamic function valueOf():Float;
																		};
																		dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																		dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																		dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																		dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																			var CREATE_INSTANT_INVITE : Bool;
																			var KICK_MEMBERS : Bool;
																			var BAN_MEMBERS : Bool;
																			var ADMINISTRATOR : Bool;
																			var MANAGE_CHANNELS : Bool;
																			var MANAGE_GUILD : Bool;
																			var ADD_REACTIONS : Bool;
																			var VIEW_AUDIT_LOG : Bool;
																			var PRIORITY_SPEAKER : Bool;
																			var STREAM : Bool;
																			var VIEW_CHANNEL : Bool;
																			var SEND_MESSAGES : Bool;
																			var SEND_TTS_MESSAGES : Bool;
																			var MANAGE_MESSAGES : Bool;
																			var EMBED_LINKS : Bool;
																			var ATTACH_FILES : Bool;
																			var READ_MESSAGE_HISTORY : Bool;
																			var MENTION_EVERYONE : Bool;
																			var USE_EXTERNAL_EMOJIS : Bool;
																			var VIEW_GUILD_INSIGHTS : Bool;
																			var CONNECT : Bool;
																			var SPEAK : Bool;
																			var MUTE_MEMBERS : Bool;
																			var DEAFEN_MEMBERS : Bool;
																			var MOVE_MEMBERS : Bool;
																			var USE_VAD : Bool;
																			var CHANGE_NICKNAME : Bool;
																			var MANAGE_NICKNAMES : Bool;
																			var MANAGE_ROLES : Bool;
																			var MANAGE_WEBHOOKS : Bool;
																			var MANAGE_EMOJIS : Bool;
																		};
																		dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																		dynamic function toJSON():Float;
																		dynamic function valueOf():Float;
																	};
																	dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																	dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																	dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																	dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																		var CREATE_INSTANT_INVITE : Bool;
																		var KICK_MEMBERS : Bool;
																		var BAN_MEMBERS : Bool;
																		var ADMINISTRATOR : Bool;
																		var MANAGE_CHANNELS : Bool;
																		var MANAGE_GUILD : Bool;
																		var ADD_REACTIONS : Bool;
																		var VIEW_AUDIT_LOG : Bool;
																		var PRIORITY_SPEAKER : Bool;
																		var STREAM : Bool;
																		var VIEW_CHANNEL : Bool;
																		var SEND_MESSAGES : Bool;
																		var SEND_TTS_MESSAGES : Bool;
																		var MANAGE_MESSAGES : Bool;
																		var EMBED_LINKS : Bool;
																		var ATTACH_FILES : Bool;
																		var READ_MESSAGE_HISTORY : Bool;
																		var MENTION_EVERYONE : Bool;
																		var USE_EXTERNAL_EMOJIS : Bool;
																		var VIEW_GUILD_INSIGHTS : Bool;
																		var CONNECT : Bool;
																		var SPEAK : Bool;
																		var MUTE_MEMBERS : Bool;
																		var DEAFEN_MEMBERS : Bool;
																		var MOVE_MEMBERS : Bool;
																		var USE_VAD : Bool;
																		var CHANGE_NICKNAME : Bool;
																		var MANAGE_NICKNAMES : Bool;
																		var MANAGE_ROLES : Bool;
																		var MANAGE_WEBHOOKS : Bool;
																		var MANAGE_EMOJIS : Bool;
																	};
																	dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																	dynamic function toJSON():Float;
																	dynamic function valueOf():Float;
																};
																dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
																dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
																dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																	var CREATE_INSTANT_INVITE : Bool;
																	var KICK_MEMBERS : Bool;
																	var BAN_MEMBERS : Bool;
																	var ADMINISTRATOR : Bool;
																	var MANAGE_CHANNELS : Bool;
																	var MANAGE_GUILD : Bool;
																	var ADD_REACTIONS : Bool;
																	var VIEW_AUDIT_LOG : Bool;
																	var PRIORITY_SPEAKER : Bool;
																	var STREAM : Bool;
																	var VIEW_CHANNEL : Bool;
																	var SEND_MESSAGES : Bool;
																	var SEND_TTS_MESSAGES : Bool;
																	var MANAGE_MESSAGES : Bool;
																	var EMBED_LINKS : Bool;
																	var ATTACH_FILES : Bool;
																	var READ_MESSAGE_HISTORY : Bool;
																	var MENTION_EVERYONE : Bool;
																	var USE_EXTERNAL_EMOJIS : Bool;
																	var VIEW_GUILD_INSIGHTS : Bool;
																	var CONNECT : Bool;
																	var SPEAK : Bool;
																	var MUTE_MEMBERS : Bool;
																	var DEAFEN_MEMBERS : Bool;
																	var MOVE_MEMBERS : Bool;
																	var USE_VAD : Bool;
																	var CHANGE_NICKNAME : Bool;
																	var MANAGE_NICKNAMES : Bool;
																	var MANAGE_ROLES : Bool;
																	var MANAGE_WEBHOOKS : Bool;
																	var MANAGE_EMOJIS : Bool;
																};
																dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
																dynamic function toJSON():Float;
																dynamic function valueOf():Float;
															};
															dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
															dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
															dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
															dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
																var CREATE_INSTANT_INVITE : Bool;
																var KICK_MEMBERS : Bool;
																var BAN_MEMBERS : Bool;
																var ADMINISTRATOR : Bool;
																var MANAGE_CHANNELS : Bool;
																var MANAGE_GUILD : Bool;
																var ADD_REACTIONS : Bool;
																var VIEW_AUDIT_LOG : Bool;
																var PRIORITY_SPEAKER : Bool;
																var STREAM : Bool;
																var VIEW_CHANNEL : Bool;
																var SEND_MESSAGES : Bool;
																var SEND_TTS_MESSAGES : Bool;
																var MANAGE_MESSAGES : Bool;
																var EMBED_LINKS : Bool;
																var ATTACH_FILES : Bool;
																var READ_MESSAGE_HISTORY : Bool;
																var MENTION_EVERYONE : Bool;
																var USE_EXTERNAL_EMOJIS : Bool;
																var VIEW_GUILD_INSIGHTS : Bool;
																var CONNECT : Bool;
																var SPEAK : Bool;
																var MUTE_MEMBERS : Bool;
																var DEAFEN_MEMBERS : Bool;
																var MOVE_MEMBERS : Bool;
																var USE_VAD : Bool;
																var CHANGE_NICKNAME : Bool;
																var MANAGE_NICKNAMES : Bool;
																var MANAGE_ROLES : Bool;
																var MANAGE_WEBHOOKS : Bool;
																var MANAGE_EMOJIS : Bool;
															};
															dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
															dynamic function toJSON():Float;
															dynamic function valueOf():Float;
														};
														dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
														dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
														dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
														dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
															var CREATE_INSTANT_INVITE : Bool;
															var KICK_MEMBERS : Bool;
															var BAN_MEMBERS : Bool;
															var ADMINISTRATOR : Bool;
															var MANAGE_CHANNELS : Bool;
															var MANAGE_GUILD : Bool;
															var ADD_REACTIONS : Bool;
															var VIEW_AUDIT_LOG : Bool;
															var PRIORITY_SPEAKER : Bool;
															var STREAM : Bool;
															var VIEW_CHANNEL : Bool;
															var SEND_MESSAGES : Bool;
															var SEND_TTS_MESSAGES : Bool;
															var MANAGE_MESSAGES : Bool;
															var EMBED_LINKS : Bool;
															var ATTACH_FILES : Bool;
															var READ_MESSAGE_HISTORY : Bool;
															var MENTION_EVERYONE : Bool;
															var USE_EXTERNAL_EMOJIS : Bool;
															var VIEW_GUILD_INSIGHTS : Bool;
															var CONNECT : Bool;
															var SPEAK : Bool;
															var MUTE_MEMBERS : Bool;
															var DEAFEN_MEMBERS : Bool;
															var MOVE_MEMBERS : Bool;
															var USE_VAD : Bool;
															var CHANGE_NICKNAME : Bool;
															var MANAGE_NICKNAMES : Bool;
															var MANAGE_ROLES : Bool;
															var MANAGE_WEBHOOKS : Bool;
															var MANAGE_EMOJIS : Bool;
														};
														dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
														dynamic function toJSON():Float;
														dynamic function valueOf():Float;
													};
													dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
													dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
													dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
													dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
														var CREATE_INSTANT_INVITE : Bool;
														var KICK_MEMBERS : Bool;
														var BAN_MEMBERS : Bool;
														var ADMINISTRATOR : Bool;
														var MANAGE_CHANNELS : Bool;
														var MANAGE_GUILD : Bool;
														var ADD_REACTIONS : Bool;
														var VIEW_AUDIT_LOG : Bool;
														var PRIORITY_SPEAKER : Bool;
														var STREAM : Bool;
														var VIEW_CHANNEL : Bool;
														var SEND_MESSAGES : Bool;
														var SEND_TTS_MESSAGES : Bool;
														var MANAGE_MESSAGES : Bool;
														var EMBED_LINKS : Bool;
														var ATTACH_FILES : Bool;
														var READ_MESSAGE_HISTORY : Bool;
														var MENTION_EVERYONE : Bool;
														var USE_EXTERNAL_EMOJIS : Bool;
														var VIEW_GUILD_INSIGHTS : Bool;
														var CONNECT : Bool;
														var SPEAK : Bool;
														var MUTE_MEMBERS : Bool;
														var DEAFEN_MEMBERS : Bool;
														var MOVE_MEMBERS : Bool;
														var USE_VAD : Bool;
														var CHANGE_NICKNAME : Bool;
														var MANAGE_NICKNAMES : Bool;
														var MANAGE_ROLES : Bool;
														var MANAGE_WEBHOOKS : Bool;
														var MANAGE_EMOJIS : Bool;
													};
													dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
													dynamic function toJSON():Float;
													dynamic function valueOf():Float;
												};
												dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
												dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
												dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
												dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
													var CREATE_INSTANT_INVITE : Bool;
													var KICK_MEMBERS : Bool;
													var BAN_MEMBERS : Bool;
													var ADMINISTRATOR : Bool;
													var MANAGE_CHANNELS : Bool;
													var MANAGE_GUILD : Bool;
													var ADD_REACTIONS : Bool;
													var VIEW_AUDIT_LOG : Bool;
													var PRIORITY_SPEAKER : Bool;
													var STREAM : Bool;
													var VIEW_CHANNEL : Bool;
													var SEND_MESSAGES : Bool;
													var SEND_TTS_MESSAGES : Bool;
													var MANAGE_MESSAGES : Bool;
													var EMBED_LINKS : Bool;
													var ATTACH_FILES : Bool;
													var READ_MESSAGE_HISTORY : Bool;
													var MENTION_EVERYONE : Bool;
													var USE_EXTERNAL_EMOJIS : Bool;
													var VIEW_GUILD_INSIGHTS : Bool;
													var CONNECT : Bool;
													var SPEAK : Bool;
													var MUTE_MEMBERS : Bool;
													var DEAFEN_MEMBERS : Bool;
													var MOVE_MEMBERS : Bool;
													var USE_VAD : Bool;
													var CHANGE_NICKNAME : Bool;
													var MANAGE_NICKNAMES : Bool;
													var MANAGE_ROLES : Bool;
													var MANAGE_WEBHOOKS : Bool;
													var MANAGE_EMOJIS : Bool;
												};
												dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
												dynamic function toJSON():Float;
												dynamic function valueOf():Float;
											};
											dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
											dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
											dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
											dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
												var CREATE_INSTANT_INVITE : Bool;
												var KICK_MEMBERS : Bool;
												var BAN_MEMBERS : Bool;
												var ADMINISTRATOR : Bool;
												var MANAGE_CHANNELS : Bool;
												var MANAGE_GUILD : Bool;
												var ADD_REACTIONS : Bool;
												var VIEW_AUDIT_LOG : Bool;
												var PRIORITY_SPEAKER : Bool;
												var STREAM : Bool;
												var VIEW_CHANNEL : Bool;
												var SEND_MESSAGES : Bool;
												var SEND_TTS_MESSAGES : Bool;
												var MANAGE_MESSAGES : Bool;
												var EMBED_LINKS : Bool;
												var ATTACH_FILES : Bool;
												var READ_MESSAGE_HISTORY : Bool;
												var MENTION_EVERYONE : Bool;
												var USE_EXTERNAL_EMOJIS : Bool;
												var VIEW_GUILD_INSIGHTS : Bool;
												var CONNECT : Bool;
												var SPEAK : Bool;
												var MUTE_MEMBERS : Bool;
												var DEAFEN_MEMBERS : Bool;
												var MOVE_MEMBERS : Bool;
												var USE_VAD : Bool;
												var CHANGE_NICKNAME : Bool;
												var MANAGE_NICKNAMES : Bool;
												var MANAGE_ROLES : Bool;
												var MANAGE_WEBHOOKS : Bool;
												var MANAGE_EMOJIS : Bool;
											};
											dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
											dynamic function toJSON():Float;
											dynamic function valueOf():Float;
										};
										dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
										dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
										dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
										dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
											var CREATE_INSTANT_INVITE : Bool;
											var KICK_MEMBERS : Bool;
											var BAN_MEMBERS : Bool;
											var ADMINISTRATOR : Bool;
											var MANAGE_CHANNELS : Bool;
											var MANAGE_GUILD : Bool;
											var ADD_REACTIONS : Bool;
											var VIEW_AUDIT_LOG : Bool;
											var PRIORITY_SPEAKER : Bool;
											var STREAM : Bool;
											var VIEW_CHANNEL : Bool;
											var SEND_MESSAGES : Bool;
											var SEND_TTS_MESSAGES : Bool;
											var MANAGE_MESSAGES : Bool;
											var EMBED_LINKS : Bool;
											var ATTACH_FILES : Bool;
											var READ_MESSAGE_HISTORY : Bool;
											var MENTION_EVERYONE : Bool;
											var USE_EXTERNAL_EMOJIS : Bool;
											var VIEW_GUILD_INSIGHTS : Bool;
											var CONNECT : Bool;
											var SPEAK : Bool;
											var MUTE_MEMBERS : Bool;
											var DEAFEN_MEMBERS : Bool;
											var MOVE_MEMBERS : Bool;
											var USE_VAD : Bool;
											var CHANGE_NICKNAME : Bool;
											var MANAGE_NICKNAMES : Bool;
											var MANAGE_ROLES : Bool;
											var MANAGE_WEBHOOKS : Bool;
											var MANAGE_EMOJIS : Bool;
										};
										dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
										dynamic function toJSON():Float;
										dynamic function valueOf():Float;
									};
									dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
									dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
									dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
									dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
										var CREATE_INSTANT_INVITE : Bool;
										var KICK_MEMBERS : Bool;
										var BAN_MEMBERS : Bool;
										var ADMINISTRATOR : Bool;
										var MANAGE_CHANNELS : Bool;
										var MANAGE_GUILD : Bool;
										var ADD_REACTIONS : Bool;
										var VIEW_AUDIT_LOG : Bool;
										var PRIORITY_SPEAKER : Bool;
										var STREAM : Bool;
										var VIEW_CHANNEL : Bool;
										var SEND_MESSAGES : Bool;
										var SEND_TTS_MESSAGES : Bool;
										var MANAGE_MESSAGES : Bool;
										var EMBED_LINKS : Bool;
										var ATTACH_FILES : Bool;
										var READ_MESSAGE_HISTORY : Bool;
										var MENTION_EVERYONE : Bool;
										var USE_EXTERNAL_EMOJIS : Bool;
										var VIEW_GUILD_INSIGHTS : Bool;
										var CONNECT : Bool;
										var SPEAK : Bool;
										var MUTE_MEMBERS : Bool;
										var DEAFEN_MEMBERS : Bool;
										var MOVE_MEMBERS : Bool;
										var USE_VAD : Bool;
										var CHANGE_NICKNAME : Bool;
										var MANAGE_NICKNAMES : Bool;
										var MANAGE_ROLES : Bool;
										var MANAGE_WEBHOOKS : Bool;
										var MANAGE_EMOJIS : Bool;
									};
									dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
									dynamic function toJSON():Float;
									dynamic function valueOf():Float;
								};
								dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
								dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
								dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
								dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
									var CREATE_INSTANT_INVITE : Bool;
									var KICK_MEMBERS : Bool;
									var BAN_MEMBERS : Bool;
									var ADMINISTRATOR : Bool;
									var MANAGE_CHANNELS : Bool;
									var MANAGE_GUILD : Bool;
									var ADD_REACTIONS : Bool;
									var VIEW_AUDIT_LOG : Bool;
									var PRIORITY_SPEAKER : Bool;
									var STREAM : Bool;
									var VIEW_CHANNEL : Bool;
									var SEND_MESSAGES : Bool;
									var SEND_TTS_MESSAGES : Bool;
									var MANAGE_MESSAGES : Bool;
									var EMBED_LINKS : Bool;
									var ATTACH_FILES : Bool;
									var READ_MESSAGE_HISTORY : Bool;
									var MENTION_EVERYONE : Bool;
									var USE_EXTERNAL_EMOJIS : Bool;
									var VIEW_GUILD_INSIGHTS : Bool;
									var CONNECT : Bool;
									var SPEAK : Bool;
									var MUTE_MEMBERS : Bool;
									var DEAFEN_MEMBERS : Bool;
									var MOVE_MEMBERS : Bool;
									var USE_VAD : Bool;
									var CHANGE_NICKNAME : Bool;
									var MANAGE_NICKNAMES : Bool;
									var MANAGE_ROLES : Bool;
									var MANAGE_WEBHOOKS : Bool;
									var MANAGE_EMOJIS : Bool;
								};
								dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
								dynamic function toJSON():Float;
								dynamic function valueOf():Float;
							};
							dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
							dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
							dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
							dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
								var CREATE_INSTANT_INVITE : Bool;
								var KICK_MEMBERS : Bool;
								var BAN_MEMBERS : Bool;
								var ADMINISTRATOR : Bool;
								var MANAGE_CHANNELS : Bool;
								var MANAGE_GUILD : Bool;
								var ADD_REACTIONS : Bool;
								var VIEW_AUDIT_LOG : Bool;
								var PRIORITY_SPEAKER : Bool;
								var STREAM : Bool;
								var VIEW_CHANNEL : Bool;
								var SEND_MESSAGES : Bool;
								var SEND_TTS_MESSAGES : Bool;
								var MANAGE_MESSAGES : Bool;
								var EMBED_LINKS : Bool;
								var ATTACH_FILES : Bool;
								var READ_MESSAGE_HISTORY : Bool;
								var MENTION_EVERYONE : Bool;
								var USE_EXTERNAL_EMOJIS : Bool;
								var VIEW_GUILD_INSIGHTS : Bool;
								var CONNECT : Bool;
								var SPEAK : Bool;
								var MUTE_MEMBERS : Bool;
								var DEAFEN_MEMBERS : Bool;
								var MOVE_MEMBERS : Bool;
								var USE_VAD : Bool;
								var CHANGE_NICKNAME : Bool;
								var MANAGE_NICKNAMES : Bool;
								var MANAGE_ROLES : Bool;
								var MANAGE_WEBHOOKS : Bool;
								var MANAGE_EMOJIS : Bool;
							};
							dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
							dynamic function toJSON():Float;
							dynamic function valueOf():Float;
						};
						dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
						dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
						dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
						dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
							var CREATE_INSTANT_INVITE : Bool;
							var KICK_MEMBERS : Bool;
							var BAN_MEMBERS : Bool;
							var ADMINISTRATOR : Bool;
							var MANAGE_CHANNELS : Bool;
							var MANAGE_GUILD : Bool;
							var ADD_REACTIONS : Bool;
							var VIEW_AUDIT_LOG : Bool;
							var PRIORITY_SPEAKER : Bool;
							var STREAM : Bool;
							var VIEW_CHANNEL : Bool;
							var SEND_MESSAGES : Bool;
							var SEND_TTS_MESSAGES : Bool;
							var MANAGE_MESSAGES : Bool;
							var EMBED_LINKS : Bool;
							var ATTACH_FILES : Bool;
							var READ_MESSAGE_HISTORY : Bool;
							var MENTION_EVERYONE : Bool;
							var USE_EXTERNAL_EMOJIS : Bool;
							var VIEW_GUILD_INSIGHTS : Bool;
							var CONNECT : Bool;
							var SPEAK : Bool;
							var MUTE_MEMBERS : Bool;
							var DEAFEN_MEMBERS : Bool;
							var MOVE_MEMBERS : Bool;
							var USE_VAD : Bool;
							var CHANGE_NICKNAME : Bool;
							var MANAGE_NICKNAMES : Bool;
							var MANAGE_ROLES : Bool;
							var MANAGE_WEBHOOKS : Bool;
							var MANAGE_EMOJIS : Bool;
						};
						dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
						dynamic function toJSON():Float;
						dynamic function valueOf():Float;
					};
					dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
					dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
					dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
					dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
						var CREATE_INSTANT_INVITE : Bool;
						var KICK_MEMBERS : Bool;
						var BAN_MEMBERS : Bool;
						var ADMINISTRATOR : Bool;
						var MANAGE_CHANNELS : Bool;
						var MANAGE_GUILD : Bool;
						var ADD_REACTIONS : Bool;
						var VIEW_AUDIT_LOG : Bool;
						var PRIORITY_SPEAKER : Bool;
						var STREAM : Bool;
						var VIEW_CHANNEL : Bool;
						var SEND_MESSAGES : Bool;
						var SEND_TTS_MESSAGES : Bool;
						var MANAGE_MESSAGES : Bool;
						var EMBED_LINKS : Bool;
						var ATTACH_FILES : Bool;
						var READ_MESSAGE_HISTORY : Bool;
						var MENTION_EVERYONE : Bool;
						var USE_EXTERNAL_EMOJIS : Bool;
						var VIEW_GUILD_INSIGHTS : Bool;
						var CONNECT : Bool;
						var SPEAK : Bool;
						var MUTE_MEMBERS : Bool;
						var DEAFEN_MEMBERS : Bool;
						var MOVE_MEMBERS : Bool;
						var USE_VAD : Bool;
						var CHANGE_NICKNAME : Bool;
						var MANAGE_NICKNAMES : Bool;
						var MANAGE_ROLES : Bool;
						var MANAGE_WEBHOOKS : Bool;
						var MANAGE_EMOJIS : Bool;
					};
					dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
					dynamic function toJSON():Float;
					dynamic function valueOf():Float;
				};
				dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
				dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
				dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
				dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
					var CREATE_INSTANT_INVITE : Bool;
					var KICK_MEMBERS : Bool;
					var BAN_MEMBERS : Bool;
					var ADMINISTRATOR : Bool;
					var MANAGE_CHANNELS : Bool;
					var MANAGE_GUILD : Bool;
					var ADD_REACTIONS : Bool;
					var VIEW_AUDIT_LOG : Bool;
					var PRIORITY_SPEAKER : Bool;
					var STREAM : Bool;
					var VIEW_CHANNEL : Bool;
					var SEND_MESSAGES : Bool;
					var SEND_TTS_MESSAGES : Bool;
					var MANAGE_MESSAGES : Bool;
					var EMBED_LINKS : Bool;
					var ATTACH_FILES : Bool;
					var READ_MESSAGE_HISTORY : Bool;
					var MENTION_EVERYONE : Bool;
					var USE_EXTERNAL_EMOJIS : Bool;
					var VIEW_GUILD_INSIGHTS : Bool;
					var CONNECT : Bool;
					var SPEAK : Bool;
					var MUTE_MEMBERS : Bool;
					var DEAFEN_MEMBERS : Bool;
					var MOVE_MEMBERS : Bool;
					var USE_VAD : Bool;
					var CHANGE_NICKNAME : Bool;
					var MANAGE_NICKNAMES : Bool;
					var MANAGE_ROLES : Bool;
					var MANAGE_WEBHOOKS : Bool;
					var MANAGE_EMOJIS : Bool;
				};
				dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
				dynamic function toJSON():Float;
				dynamic function valueOf():Float;
			};
			dynamic function has(bit:BitFieldResolvable<PermissionString>):Bool;
			dynamic function missing(bits:BitFieldResolvable<PermissionString>, hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
			dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
			dynamic function serialize(hasParam:haxe.extern.Rest<Any>):{
				var CREATE_INSTANT_INVITE : Bool;
				var KICK_MEMBERS : Bool;
				var BAN_MEMBERS : Bool;
				var ADMINISTRATOR : Bool;
				var MANAGE_CHANNELS : Bool;
				var MANAGE_GUILD : Bool;
				var ADD_REACTIONS : Bool;
				var VIEW_AUDIT_LOG : Bool;
				var PRIORITY_SPEAKER : Bool;
				var STREAM : Bool;
				var VIEW_CHANNEL : Bool;
				var SEND_MESSAGES : Bool;
				var SEND_TTS_MESSAGES : Bool;
				var MANAGE_MESSAGES : Bool;
				var EMBED_LINKS : Bool;
				var ATTACH_FILES : Bool;
				var READ_MESSAGE_HISTORY : Bool;
				var MENTION_EVERYONE : Bool;
				var USE_EXTERNAL_EMOJIS : Bool;
				var VIEW_GUILD_INSIGHTS : Bool;
				var CONNECT : Bool;
				var SPEAK : Bool;
				var MUTE_MEMBERS : Bool;
				var DEAFEN_MEMBERS : Bool;
				var MOVE_MEMBERS : Bool;
				var USE_VAD : Bool;
				var CHANGE_NICKNAME : Bool;
				var MANAGE_NICKNAMES : Bool;
				var MANAGE_ROLES : Bool;
				var MANAGE_WEBHOOKS : Bool;
				var MANAGE_EMOJIS : Bool;
			};
			dynamic function toArray(hasParam:haxe.extern.Rest<Any>):Array<PermissionString>;
			dynamic function toJSON():Float;
			dynamic function valueOf():Float;
		};
		dynamic function remove(bits:haxe.extern.Rest<BitFieldResolvable<PermissionString>>):BitField<PermissionString>;
		dynamic function toJSON():Float;
		dynamic function valueOf():Float;
	}>;
	public function setName(name:String, ?reason:String):js.lib.Promise<GuildChannel>;
	public function setParent(channel:Null<ts.AnyOf2<String, CategoryChannel>>, ?options:{ @:optional var lockPermissions : Bool; @:optional var reason : String; }):js.lib.Promise<GuildChannel>;
	public function setPosition(position:Float, ?options:{ @:optional var relative : Bool; @:optional var reason : String; }):js.lib.Promise<GuildChannel>;
	public function setTopic(topic:Null<String>, ?reason:String):js.lib.Promise<GuildChannel>;
	public function updateOverwrite(userOrRole:ts.AnyOf5<String, User, GuildMember, Message, Role>, options:PermissionOverwriteOption, ?reason:String):js.lib.Promise<GuildChannel>;
	public function isText():Bool;
	static var prototype : GuildChannel;
}